// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.1
// 	protoc        (unknown)
// source: worker.proto

package schedulerx

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Worker report heartbeat to Server
type WorkerHeartBeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId       *string `protobuf:"bytes,1,req,name=group_id,json=groupId" json:"group_id,omitempty"`
	Version       *string `protobuf:"bytes,2,req,name=version" json:"version,omitempty"`
	WorkerId      *string `protobuf:"bytes,3,req,name=worker_id,json=workerId" json:"worker_id,omitempty"`
	MetricsJson   *string `protobuf:"bytes,4,opt,name=metrics_json,json=metricsJson" json:"metrics_json,omitempty"`
	JobInstanceId []int64 `protobuf:"varint,5,rep,name=job_instance_id,json=jobInstanceId" json:"job_instance_id,omitempty"`
	Starter       *string `protobuf:"bytes,6,opt,name=starter" json:"starter,omitempty"`
	AppGroupId    *int64  `protobuf:"varint,7,opt,name=app_group_id,json=appGroupId" json:"app_group_id,omitempty"`
	Source        *string `protobuf:"bytes,8,opt,name=source" json:"source,omitempty"`
	Label         *string `protobuf:"bytes,9,opt,name=label" json:"label,omitempty"`
	Online        *bool   `protobuf:"varint,10,opt,name=online" json:"online,omitempty"`
	AppKey        *string `protobuf:"bytes,11,opt,name=app_key,json=appKey" json:"app_key,omitempty"`
	RpcPort       *int32  `protobuf:"varint,12,opt,name=rpc_port,json=rpcPort" json:"rpc_port,omitempty"`
}

func (x *WorkerHeartBeatRequest) Reset() {
	*x = WorkerHeartBeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerHeartBeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerHeartBeatRequest) ProtoMessage() {}

func (x *WorkerHeartBeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerHeartBeatRequest.ProtoReflect.Descriptor instead.
func (*WorkerHeartBeatRequest) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{0}
}

func (x *WorkerHeartBeatRequest) GetGroupId() string {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return ""
}

func (x *WorkerHeartBeatRequest) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *WorkerHeartBeatRequest) GetWorkerId() string {
	if x != nil && x.WorkerId != nil {
		return *x.WorkerId
	}
	return ""
}

func (x *WorkerHeartBeatRequest) GetMetricsJson() string {
	if x != nil && x.MetricsJson != nil {
		return *x.MetricsJson
	}
	return ""
}

func (x *WorkerHeartBeatRequest) GetJobInstanceId() []int64 {
	if x != nil {
		return x.JobInstanceId
	}
	return nil
}

func (x *WorkerHeartBeatRequest) GetStarter() string {
	if x != nil && x.Starter != nil {
		return *x.Starter
	}
	return ""
}

func (x *WorkerHeartBeatRequest) GetAppGroupId() int64 {
	if x != nil && x.AppGroupId != nil {
		return *x.AppGroupId
	}
	return 0
}

func (x *WorkerHeartBeatRequest) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

func (x *WorkerHeartBeatRequest) GetLabel() string {
	if x != nil && x.Label != nil {
		return *x.Label
	}
	return ""
}

func (x *WorkerHeartBeatRequest) GetOnline() bool {
	if x != nil && x.Online != nil {
		return *x.Online
	}
	return false
}

func (x *WorkerHeartBeatRequest) GetAppKey() string {
	if x != nil && x.AppKey != nil {
		return *x.AppKey
	}
	return ""
}

func (x *WorkerHeartBeatRequest) GetRpcPort() int32 {
	if x != nil && x.RpcPort != nil {
		return *x.RpcPort
	}
	return 0
}

type WorkerHeartBeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success *bool   `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	Message *string `protobuf:"bytes,2,opt,name=message,def=" json:"message,omitempty"`
}

// Default values for WorkerHeartBeatResponse fields.
const (
	Default_WorkerHeartBeatResponse_Message = string("")
)

func (x *WorkerHeartBeatResponse) Reset() {
	*x = WorkerHeartBeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerHeartBeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerHeartBeatResponse) ProtoMessage() {}

func (x *WorkerHeartBeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerHeartBeatResponse.ProtoReflect.Descriptor instead.
func (*WorkerHeartBeatResponse) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{1}
}

func (x *WorkerHeartBeatResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *WorkerHeartBeatResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return Default_WorkerHeartBeatResponse_Message
}

// TaskMaster start container
type MasterStartContainerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId                  *int64          `protobuf:"varint,1,req,name=job_id,json=jobId" json:"job_id,omitempty"`
	JobInstanceId          *int64          `protobuf:"varint,2,req,name=job_instance_id,json=jobInstanceId" json:"job_instance_id,omitempty"`
	TaskId                 *int64          `protobuf:"varint,3,req,name=task_id,json=taskId" json:"task_id,omitempty"`
	ScheduleTime           *int64          `protobuf:"varint,4,req,name=schedule_time,json=scheduleTime" json:"schedule_time,omitempty"`
	DataTime               *int64          `protobuf:"varint,5,req,name=data_time,json=dataTime" json:"data_time,omitempty"`
	JobType                *string         `protobuf:"bytes,6,req,name=job_type,json=jobType" json:"job_type,omitempty"`
	Content                *string         `protobuf:"bytes,7,req,name=content" json:"content,omitempty"`
	User                   *string         `protobuf:"bytes,8,req,name=user" json:"user,omitempty"`
	Parameters             *string         `protobuf:"bytes,9,opt,name=parameters" json:"parameters,omitempty"`
	InstanceMasterAkkaPath *string         `protobuf:"bytes,10,req,name=instance_master_akka_path,json=instanceMasterAkkaPath" json:"instance_master_akka_path,omitempty"`
	TaskName               *string         `protobuf:"bytes,11,opt,name=task_name,json=taskName" json:"task_name,omitempty"`
	Task                   []byte          `protobuf:"bytes,12,opt,name=task" json:"task,omitempty"`
	ConsumerNum            *int32          `protobuf:"varint,13,opt,name=consumer_num,json=consumerNum" json:"consumer_num,omitempty"`
	GroupId                *string         `protobuf:"bytes,14,req,name=group_id,json=groupId" json:"group_id,omitempty"`
	InstanceParameters     *string         `protobuf:"bytes,15,opt,name=instance_parameters,json=instanceParameters" json:"instance_parameters,omitempty"`
	UpstreamData           []*UpstreamData `protobuf:"bytes,16,rep,name=upstreamData" json:"upstreamData,omitempty"`
	MaxAttempt             *int32          `protobuf:"varint,17,opt,name=max_attempt,json=maxAttempt" json:"max_attempt,omitempty"`
	Attempt                *int32          `protobuf:"varint,18,opt,name=attempt" json:"attempt,omitempty"`
	TaskMaxAttempt         *int32          `protobuf:"varint,19,opt,name=task_max_attempt,json=taskMaxAttempt" json:"task_max_attempt,omitempty"`
	TaskAttemptInterval    *int32          `protobuf:"varint,20,opt,name=task_attempt_interval,json=taskAttemptInterval" json:"task_attempt_interval,omitempty"`
	Failover               *bool           `protobuf:"varint,21,opt,name=failover,def=0" json:"failover,omitempty"`
	WfInstanceId           *int64          `protobuf:"varint,22,opt,name=wf_instance_id,json=wfInstanceId" json:"wf_instance_id,omitempty"`
	SerialNum              *int64          `protobuf:"varint,23,opt,name=serial_num,json=serialNum" json:"serial_num,omitempty"`
	ExecuteMode            *string         `protobuf:"bytes,24,opt,name=execute_mode,json=executeMode" json:"execute_mode,omitempty"`
	JobName                *string         `protobuf:"bytes,25,opt,name=job_name,json=jobName" json:"job_name,omitempty"`
	ShardingNum            *int32          `protobuf:"varint,26,opt,name=sharding_num,json=shardingNum" json:"sharding_num,omitempty"`
	TimeType               *int32          `protobuf:"varint,27,opt,name=time_type,json=timeType" json:"time_type,omitempty"`
	TimeExpression         *string         `protobuf:"bytes,28,opt,name=time_expression,json=timeExpression" json:"time_expression,omitempty"`
	Xattrs                 *string         `protobuf:"bytes,29,opt,name=xattrs" json:"xattrs,omitempty"`
	Namespace              *string         `protobuf:"bytes,30,opt,name=namespace" json:"namespace,omitempty"`
	TriggerType            *int32          `protobuf:"varint,31,opt,name=trigger_type,json=triggerType" json:"trigger_type,omitempty"`
	Template               *string         `protobuf:"bytes,32,opt,name=template" json:"template,omitempty"`
	AppGroupId             *int64          `protobuf:"varint,33,opt,name=app_group_id,json=appGroupId" json:"app_group_id,omitempty"`
}

// Default values for MasterStartContainerRequest fields.
const (
	Default_MasterStartContainerRequest_Failover = bool(false)
)

func (x *MasterStartContainerRequest) Reset() {
	*x = MasterStartContainerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MasterStartContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterStartContainerRequest) ProtoMessage() {}

func (x *MasterStartContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterStartContainerRequest.ProtoReflect.Descriptor instead.
func (*MasterStartContainerRequest) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{2}
}

func (x *MasterStartContainerRequest) GetJobId() int64 {
	if x != nil && x.JobId != nil {
		return *x.JobId
	}
	return 0
}

func (x *MasterStartContainerRequest) GetJobInstanceId() int64 {
	if x != nil && x.JobInstanceId != nil {
		return *x.JobInstanceId
	}
	return 0
}

func (x *MasterStartContainerRequest) GetTaskId() int64 {
	if x != nil && x.TaskId != nil {
		return *x.TaskId
	}
	return 0
}

func (x *MasterStartContainerRequest) GetScheduleTime() int64 {
	if x != nil && x.ScheduleTime != nil {
		return *x.ScheduleTime
	}
	return 0
}

func (x *MasterStartContainerRequest) GetDataTime() int64 {
	if x != nil && x.DataTime != nil {
		return *x.DataTime
	}
	return 0
}

func (x *MasterStartContainerRequest) GetJobType() string {
	if x != nil && x.JobType != nil {
		return *x.JobType
	}
	return ""
}

func (x *MasterStartContainerRequest) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *MasterStartContainerRequest) GetUser() string {
	if x != nil && x.User != nil {
		return *x.User
	}
	return ""
}

func (x *MasterStartContainerRequest) GetParameters() string {
	if x != nil && x.Parameters != nil {
		return *x.Parameters
	}
	return ""
}

func (x *MasterStartContainerRequest) GetInstanceMasterAkkaPath() string {
	if x != nil && x.InstanceMasterAkkaPath != nil {
		return *x.InstanceMasterAkkaPath
	}
	return ""
}

func (x *MasterStartContainerRequest) GetTaskName() string {
	if x != nil && x.TaskName != nil {
		return *x.TaskName
	}
	return ""
}

func (x *MasterStartContainerRequest) GetTask() []byte {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *MasterStartContainerRequest) GetConsumerNum() int32 {
	if x != nil && x.ConsumerNum != nil {
		return *x.ConsumerNum
	}
	return 0
}

func (x *MasterStartContainerRequest) GetGroupId() string {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return ""
}

func (x *MasterStartContainerRequest) GetInstanceParameters() string {
	if x != nil && x.InstanceParameters != nil {
		return *x.InstanceParameters
	}
	return ""
}

func (x *MasterStartContainerRequest) GetUpstreamData() []*UpstreamData {
	if x != nil {
		return x.UpstreamData
	}
	return nil
}

func (x *MasterStartContainerRequest) GetMaxAttempt() int32 {
	if x != nil && x.MaxAttempt != nil {
		return *x.MaxAttempt
	}
	return 0
}

func (x *MasterStartContainerRequest) GetAttempt() int32 {
	if x != nil && x.Attempt != nil {
		return *x.Attempt
	}
	return 0
}

func (x *MasterStartContainerRequest) GetTaskMaxAttempt() int32 {
	if x != nil && x.TaskMaxAttempt != nil {
		return *x.TaskMaxAttempt
	}
	return 0
}

func (x *MasterStartContainerRequest) GetTaskAttemptInterval() int32 {
	if x != nil && x.TaskAttemptInterval != nil {
		return *x.TaskAttemptInterval
	}
	return 0
}

func (x *MasterStartContainerRequest) GetFailover() bool {
	if x != nil && x.Failover != nil {
		return *x.Failover
	}
	return Default_MasterStartContainerRequest_Failover
}

func (x *MasterStartContainerRequest) GetWfInstanceId() int64 {
	if x != nil && x.WfInstanceId != nil {
		return *x.WfInstanceId
	}
	return 0
}

func (x *MasterStartContainerRequest) GetSerialNum() int64 {
	if x != nil && x.SerialNum != nil {
		return *x.SerialNum
	}
	return 0
}

func (x *MasterStartContainerRequest) GetExecuteMode() string {
	if x != nil && x.ExecuteMode != nil {
		return *x.ExecuteMode
	}
	return ""
}

func (x *MasterStartContainerRequest) GetJobName() string {
	if x != nil && x.JobName != nil {
		return *x.JobName
	}
	return ""
}

func (x *MasterStartContainerRequest) GetShardingNum() int32 {
	if x != nil && x.ShardingNum != nil {
		return *x.ShardingNum
	}
	return 0
}

func (x *MasterStartContainerRequest) GetTimeType() int32 {
	if x != nil && x.TimeType != nil {
		return *x.TimeType
	}
	return 0
}

func (x *MasterStartContainerRequest) GetTimeExpression() string {
	if x != nil && x.TimeExpression != nil {
		return *x.TimeExpression
	}
	return ""
}

func (x *MasterStartContainerRequest) GetXattrs() string {
	if x != nil && x.Xattrs != nil {
		return *x.Xattrs
	}
	return ""
}

func (x *MasterStartContainerRequest) GetNamespace() string {
	if x != nil && x.Namespace != nil {
		return *x.Namespace
	}
	return ""
}

func (x *MasterStartContainerRequest) GetTriggerType() int32 {
	if x != nil && x.TriggerType != nil {
		return *x.TriggerType
	}
	return 0
}

func (x *MasterStartContainerRequest) GetTemplate() string {
	if x != nil && x.Template != nil {
		return *x.Template
	}
	return ""
}

func (x *MasterStartContainerRequest) GetAppGroupId() int64 {
	if x != nil && x.AppGroupId != nil {
		return *x.AppGroupId
	}
	return 0
}

type MasterStartContainerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success *bool   `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	Message *string `protobuf:"bytes,2,opt,name=message,def=" json:"message,omitempty"`
}

// Default values for MasterStartContainerResponse fields.
const (
	Default_MasterStartContainerResponse_Message = string("")
)

func (x *MasterStartContainerResponse) Reset() {
	*x = MasterStartContainerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MasterStartContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterStartContainerResponse) ProtoMessage() {}

func (x *MasterStartContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterStartContainerResponse.ProtoReflect.Descriptor instead.
func (*MasterStartContainerResponse) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{3}
}

func (x *MasterStartContainerResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *MasterStartContainerResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return Default_MasterStartContainerResponse_Message
}

// TaskMaster batch start containers
type MasterBatchStartContainersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobInstanceId *int64                         `protobuf:"varint,1,req,name=job_instance_id,json=jobInstanceId" json:"job_instance_id,omitempty"`
	StartReqs     []*MasterStartContainerRequest `protobuf:"bytes,2,rep,name=start_reqs,json=startReqs" json:"start_reqs,omitempty"`
	JobId         *int64                         `protobuf:"varint,3,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	SerialNum     *int64                         `protobuf:"varint,4,opt,name=serial_num,json=serialNum" json:"serial_num,omitempty"`
}

func (x *MasterBatchStartContainersRequest) Reset() {
	*x = MasterBatchStartContainersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MasterBatchStartContainersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterBatchStartContainersRequest) ProtoMessage() {}

func (x *MasterBatchStartContainersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterBatchStartContainersRequest.ProtoReflect.Descriptor instead.
func (*MasterBatchStartContainersRequest) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{4}
}

func (x *MasterBatchStartContainersRequest) GetJobInstanceId() int64 {
	if x != nil && x.JobInstanceId != nil {
		return *x.JobInstanceId
	}
	return 0
}

func (x *MasterBatchStartContainersRequest) GetStartReqs() []*MasterStartContainerRequest {
	if x != nil {
		return x.StartReqs
	}
	return nil
}

func (x *MasterBatchStartContainersRequest) GetJobId() int64 {
	if x != nil && x.JobId != nil {
		return *x.JobId
	}
	return 0
}

func (x *MasterBatchStartContainersRequest) GetSerialNum() int64 {
	if x != nil && x.SerialNum != nil {
		return *x.SerialNum
	}
	return 0
}

type MasterBatchStartContainersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success       *bool   `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	Message       *string `protobuf:"bytes,2,opt,name=message,def=" json:"message,omitempty"`
	FailedTaskIds []int64 `protobuf:"varint,3,rep,name=failed_taskIds,json=failedTaskIds" json:"failed_taskIds,omitempty"`
	MetricsJson   *string `protobuf:"bytes,4,opt,name=metrics_json,json=metricsJson" json:"metrics_json,omitempty"`
}

// Default values for MasterBatchStartContainersResponse fields.
const (
	Default_MasterBatchStartContainersResponse_Message = string("")
)

func (x *MasterBatchStartContainersResponse) Reset() {
	*x = MasterBatchStartContainersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MasterBatchStartContainersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterBatchStartContainersResponse) ProtoMessage() {}

func (x *MasterBatchStartContainersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterBatchStartContainersResponse.ProtoReflect.Descriptor instead.
func (*MasterBatchStartContainersResponse) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{5}
}

func (x *MasterBatchStartContainersResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *MasterBatchStartContainersResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return Default_MasterBatchStartContainersResponse_Message
}

func (x *MasterBatchStartContainersResponse) GetFailedTaskIds() []int64 {
	if x != nil {
		return x.FailedTaskIds
	}
	return nil
}

func (x *MasterBatchStartContainersResponse) GetMetricsJson() string {
	if x != nil && x.MetricsJson != nil {
		return *x.MetricsJson
	}
	return ""
}

// TaskMaster kill container
type MasterKillContainerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId                 *int64  `protobuf:"varint,1,req,name=job_id,json=jobId" json:"job_id,omitempty"`
	JobInstanceId         *int64  `protobuf:"varint,2,req,name=job_instance_id,json=jobInstanceId" json:"job_instance_id,omitempty"`
	TaskId                *int64  `protobuf:"varint,3,opt,name=task_id,json=taskId" json:"task_id,omitempty"`
	User                  *string `protobuf:"bytes,4,opt,name=user" json:"user,omitempty"`
	MayInterruptIfRunning *bool   `protobuf:"varint,5,req,name=mayInterruptIfRunning" json:"mayInterruptIfRunning,omitempty"`
	AppGroupId            *int64  `protobuf:"varint,6,opt,name=app_group_id,json=appGroupId" json:"app_group_id,omitempty"`
}

func (x *MasterKillContainerRequest) Reset() {
	*x = MasterKillContainerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MasterKillContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterKillContainerRequest) ProtoMessage() {}

func (x *MasterKillContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterKillContainerRequest.ProtoReflect.Descriptor instead.
func (*MasterKillContainerRequest) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{6}
}

func (x *MasterKillContainerRequest) GetJobId() int64 {
	if x != nil && x.JobId != nil {
		return *x.JobId
	}
	return 0
}

func (x *MasterKillContainerRequest) GetJobInstanceId() int64 {
	if x != nil && x.JobInstanceId != nil {
		return *x.JobInstanceId
	}
	return 0
}

func (x *MasterKillContainerRequest) GetTaskId() int64 {
	if x != nil && x.TaskId != nil {
		return *x.TaskId
	}
	return 0
}

func (x *MasterKillContainerRequest) GetUser() string {
	if x != nil && x.User != nil {
		return *x.User
	}
	return ""
}

func (x *MasterKillContainerRequest) GetMayInterruptIfRunning() bool {
	if x != nil && x.MayInterruptIfRunning != nil {
		return *x.MayInterruptIfRunning
	}
	return false
}

func (x *MasterKillContainerRequest) GetAppGroupId() int64 {
	if x != nil && x.AppGroupId != nil {
		return *x.AppGroupId
	}
	return 0
}

type MasterKillContainerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success *bool   `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	Message *string `protobuf:"bytes,2,opt,name=message,def=" json:"message,omitempty"`
}

// Default values for MasterKillContainerResponse fields.
const (
	Default_MasterKillContainerResponse_Message = string("")
)

func (x *MasterKillContainerResponse) Reset() {
	*x = MasterKillContainerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MasterKillContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterKillContainerResponse) ProtoMessage() {}

func (x *MasterKillContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterKillContainerResponse.ProtoReflect.Descriptor instead.
func (*MasterKillContainerResponse) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{7}
}

func (x *MasterKillContainerResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *MasterKillContainerResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return Default_MasterKillContainerResponse_Message
}

// TaskMaster destroy containerPool by jobInstance when finished
type MasterDestroyContainerPoolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobInstanceId         *int64  `protobuf:"varint,1,req,name=job_instance_id,json=jobInstanceId" json:"job_instance_id,omitempty"`
	JobId                 *int64  `protobuf:"varint,2,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	WorkerIdAddr          *string `protobuf:"bytes,3,opt,name=worker_id_addr,json=workerIdAddr" json:"worker_id_addr,omitempty"`
	DeliveryId            *int64  `protobuf:"varint,4,opt,name=delivery_id,json=deliveryId" json:"delivery_id,omitempty"`
	AlreadyUnConfirmRetry *bool   `protobuf:"varint,5,opt,name=already_unConfirm_retry,json=alreadyUnConfirmRetry" json:"already_unConfirm_retry,omitempty"`
	SerialNum             *int64  `protobuf:"varint,6,opt,name=serial_num,json=serialNum" json:"serial_num,omitempty"`
}

func (x *MasterDestroyContainerPoolRequest) Reset() {
	*x = MasterDestroyContainerPoolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MasterDestroyContainerPoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterDestroyContainerPoolRequest) ProtoMessage() {}

func (x *MasterDestroyContainerPoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterDestroyContainerPoolRequest.ProtoReflect.Descriptor instead.
func (*MasterDestroyContainerPoolRequest) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{8}
}

func (x *MasterDestroyContainerPoolRequest) GetJobInstanceId() int64 {
	if x != nil && x.JobInstanceId != nil {
		return *x.JobInstanceId
	}
	return 0
}

func (x *MasterDestroyContainerPoolRequest) GetJobId() int64 {
	if x != nil && x.JobId != nil {
		return *x.JobId
	}
	return 0
}

func (x *MasterDestroyContainerPoolRequest) GetWorkerIdAddr() string {
	if x != nil && x.WorkerIdAddr != nil {
		return *x.WorkerIdAddr
	}
	return ""
}

func (x *MasterDestroyContainerPoolRequest) GetDeliveryId() int64 {
	if x != nil && x.DeliveryId != nil {
		return *x.DeliveryId
	}
	return 0
}

func (x *MasterDestroyContainerPoolRequest) GetAlreadyUnConfirmRetry() bool {
	if x != nil && x.AlreadyUnConfirmRetry != nil {
		return *x.AlreadyUnConfirmRetry
	}
	return false
}

func (x *MasterDestroyContainerPoolRequest) GetSerialNum() int64 {
	if x != nil && x.SerialNum != nil {
		return *x.SerialNum
	}
	return 0
}

type MasterDestroyContainerPoolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success    *bool   `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	Message    *string `protobuf:"bytes,2,opt,name=message,def=" json:"message,omitempty"`
	DeliveryId *int64  `protobuf:"varint,3,opt,name=delivery_id,json=deliveryId" json:"delivery_id,omitempty"`
}

// Default values for MasterDestroyContainerPoolResponse fields.
const (
	Default_MasterDestroyContainerPoolResponse_Message = string("")
)

func (x *MasterDestroyContainerPoolResponse) Reset() {
	*x = MasterDestroyContainerPoolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MasterDestroyContainerPoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterDestroyContainerPoolResponse) ProtoMessage() {}

func (x *MasterDestroyContainerPoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterDestroyContainerPoolResponse.ProtoReflect.Descriptor instead.
func (*MasterDestroyContainerPoolResponse) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{9}
}

func (x *MasterDestroyContainerPoolResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *MasterDestroyContainerPoolResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return Default_MasterDestroyContainerPoolResponse_Message
}

func (x *MasterDestroyContainerPoolResponse) GetDeliveryId() int64 {
	if x != nil && x.DeliveryId != nil {
		return *x.DeliveryId
	}
	return 0
}

// TaskMaster check worker if alive
type MasterCheckWorkerAliveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobInstanceId *int64  `protobuf:"varint,1,req,name=job_instance_id,json=jobInstanceId" json:"job_instance_id,omitempty"`
	DispatchMode  *string `protobuf:"bytes,2,opt,name=dispatch_mode,json=dispatchMode" json:"dispatch_mode,omitempty"`
}

func (x *MasterCheckWorkerAliveRequest) Reset() {
	*x = MasterCheckWorkerAliveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MasterCheckWorkerAliveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterCheckWorkerAliveRequest) ProtoMessage() {}

func (x *MasterCheckWorkerAliveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterCheckWorkerAliveRequest.ProtoReflect.Descriptor instead.
func (*MasterCheckWorkerAliveRequest) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{10}
}

func (x *MasterCheckWorkerAliveRequest) GetJobInstanceId() int64 {
	if x != nil && x.JobInstanceId != nil {
		return *x.JobInstanceId
	}
	return 0
}

func (x *MasterCheckWorkerAliveRequest) GetDispatchMode() string {
	if x != nil && x.DispatchMode != nil {
		return *x.DispatchMode
	}
	return ""
}

type MasterCheckWorkerAliveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success     *bool   `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	Message     *string `protobuf:"bytes,2,opt,name=message,def=" json:"message,omitempty"`
	MetricsJson *string `protobuf:"bytes,3,opt,name=metrics_json,json=metricsJson" json:"metrics_json,omitempty"`
}

// Default values for MasterCheckWorkerAliveResponse fields.
const (
	Default_MasterCheckWorkerAliveResponse_Message = string("")
)

func (x *MasterCheckWorkerAliveResponse) Reset() {
	*x = MasterCheckWorkerAliveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MasterCheckWorkerAliveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterCheckWorkerAliveResponse) ProtoMessage() {}

func (x *MasterCheckWorkerAliveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterCheckWorkerAliveResponse.ProtoReflect.Descriptor instead.
func (*MasterCheckWorkerAliveResponse) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{11}
}

func (x *MasterCheckWorkerAliveResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *MasterCheckWorkerAliveResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return Default_MasterCheckWorkerAliveResponse_Message
}

func (x *MasterCheckWorkerAliveResponse) GetMetricsJson() string {
	if x != nil && x.MetricsJson != nil {
		return *x.MetricsJson
	}
	return ""
}

// TaskMaster report job instance status to Server
type WorkerReportJobInstanceStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId                 *int64  `protobuf:"varint,1,req,name=job_id,json=jobId" json:"job_id,omitempty"`
	JobInstanceId         *int64  `protobuf:"varint,2,req,name=job_instance_id,json=jobInstanceId" json:"job_instance_id,omitempty"`
	Status                *int32  `protobuf:"varint,3,req,name=status" json:"status,omitempty"`
	Result                *string `protobuf:"bytes,4,opt,name=result" json:"result,omitempty"`
	Progress              *string `protobuf:"bytes,5,opt,name=progress" json:"progress,omitempty"`
	DeliveryId            *int64  `protobuf:"varint,6,opt,name=delivery_id,json=deliveryId" json:"delivery_id,omitempty"`
	AlreadyUnConfirmRetry *bool   `protobuf:"varint,7,opt,name=already_unConfirm_retry,json=alreadyUnConfirmRetry" json:"already_unConfirm_retry,omitempty"`
	GroupId               *string `protobuf:"bytes,8,opt,name=group_id,json=groupId" json:"group_id,omitempty"`
	TraceId               *string `protobuf:"bytes,9,opt,name=traceId" json:"traceId,omitempty"`
}

func (x *WorkerReportJobInstanceStatusRequest) Reset() {
	*x = WorkerReportJobInstanceStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerReportJobInstanceStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerReportJobInstanceStatusRequest) ProtoMessage() {}

func (x *WorkerReportJobInstanceStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerReportJobInstanceStatusRequest.ProtoReflect.Descriptor instead.
func (*WorkerReportJobInstanceStatusRequest) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{12}
}

func (x *WorkerReportJobInstanceStatusRequest) GetJobId() int64 {
	if x != nil && x.JobId != nil {
		return *x.JobId
	}
	return 0
}

func (x *WorkerReportJobInstanceStatusRequest) GetJobInstanceId() int64 {
	if x != nil && x.JobInstanceId != nil {
		return *x.JobInstanceId
	}
	return 0
}

func (x *WorkerReportJobInstanceStatusRequest) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *WorkerReportJobInstanceStatusRequest) GetResult() string {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return ""
}

func (x *WorkerReportJobInstanceStatusRequest) GetProgress() string {
	if x != nil && x.Progress != nil {
		return *x.Progress
	}
	return ""
}

func (x *WorkerReportJobInstanceStatusRequest) GetDeliveryId() int64 {
	if x != nil && x.DeliveryId != nil {
		return *x.DeliveryId
	}
	return 0
}

func (x *WorkerReportJobInstanceStatusRequest) GetAlreadyUnConfirmRetry() bool {
	if x != nil && x.AlreadyUnConfirmRetry != nil {
		return *x.AlreadyUnConfirmRetry
	}
	return false
}

func (x *WorkerReportJobInstanceStatusRequest) GetGroupId() string {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return ""
}

func (x *WorkerReportJobInstanceStatusRequest) GetTraceId() string {
	if x != nil && x.TraceId != nil {
		return *x.TraceId
	}
	return ""
}

type WorkerReportJobInstanceStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success    *bool   `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	Message    *string `protobuf:"bytes,2,opt,name=message,def=" json:"message,omitempty"`
	DeliveryId *int64  `protobuf:"varint,3,req,name=delivery_id,json=deliveryId" json:"delivery_id,omitempty"`
}

// Default values for WorkerReportJobInstanceStatusResponse fields.
const (
	Default_WorkerReportJobInstanceStatusResponse_Message = string("")
)

func (x *WorkerReportJobInstanceStatusResponse) Reset() {
	*x = WorkerReportJobInstanceStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerReportJobInstanceStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerReportJobInstanceStatusResponse) ProtoMessage() {}

func (x *WorkerReportJobInstanceStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerReportJobInstanceStatusResponse.ProtoReflect.Descriptor instead.
func (*WorkerReportJobInstanceStatusResponse) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{13}
}

func (x *WorkerReportJobInstanceStatusResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *WorkerReportJobInstanceStatusResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return Default_WorkerReportJobInstanceStatusResponse_Message
}

func (x *WorkerReportJobInstanceStatusResponse) GetDeliveryId() int64 {
	if x != nil && x.DeliveryId != nil {
		return *x.DeliveryId
	}
	return 0
}

// TaskMaster report progress to Server
type WorkerReportJobInstanceProgressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId         *int64  `protobuf:"varint,1,req,name=job_id,json=jobId" json:"job_id,omitempty"`
	JobInstanceId *int64  `protobuf:"varint,2,req,name=job_instance_id,json=jobInstanceId" json:"job_instance_id,omitempty"`
	Progress      *string `protobuf:"bytes,3,req,name=progress" json:"progress,omitempty"`
	TriggerTimes  *int32  `protobuf:"varint,4,opt,name=trigger_times,json=triggerTimes" json:"trigger_times,omitempty"`
}

func (x *WorkerReportJobInstanceProgressRequest) Reset() {
	*x = WorkerReportJobInstanceProgressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerReportJobInstanceProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerReportJobInstanceProgressRequest) ProtoMessage() {}

func (x *WorkerReportJobInstanceProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerReportJobInstanceProgressRequest.ProtoReflect.Descriptor instead.
func (*WorkerReportJobInstanceProgressRequest) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{14}
}

func (x *WorkerReportJobInstanceProgressRequest) GetJobId() int64 {
	if x != nil && x.JobId != nil {
		return *x.JobId
	}
	return 0
}

func (x *WorkerReportJobInstanceProgressRequest) GetJobInstanceId() int64 {
	if x != nil && x.JobInstanceId != nil {
		return *x.JobInstanceId
	}
	return 0
}

func (x *WorkerReportJobInstanceProgressRequest) GetProgress() string {
	if x != nil && x.Progress != nil {
		return *x.Progress
	}
	return ""
}

func (x *WorkerReportJobInstanceProgressRequest) GetTriggerTimes() int32 {
	if x != nil && x.TriggerTimes != nil {
		return *x.TriggerTimes
	}
	return 0
}

type WorkerReportJobInstanceProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success *bool   `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	Message *string `protobuf:"bytes,2,opt,name=message,def=" json:"message,omitempty"`
}

// Default values for WorkerReportJobInstanceProgressResponse fields.
const (
	Default_WorkerReportJobInstanceProgressResponse_Message = string("")
)

func (x *WorkerReportJobInstanceProgressResponse) Reset() {
	*x = WorkerReportJobInstanceProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerReportJobInstanceProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerReportJobInstanceProgressResponse) ProtoMessage() {}

func (x *WorkerReportJobInstanceProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerReportJobInstanceProgressResponse.ProtoReflect.Descriptor instead.
func (*WorkerReportJobInstanceProgressResponse) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{15}
}

func (x *WorkerReportJobInstanceProgressResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *WorkerReportJobInstanceProgressResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return Default_WorkerReportJobInstanceProgressResponse_Message
}

// ServerPersistence batch update task status, e.g. worker is down
type WorkerBatchUpdateTaskStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobInstanceId *int64  `protobuf:"varint,1,req,name=job_instance_id,json=jobInstanceId" json:"job_instance_id,omitempty"`
	Status        *int32  `protobuf:"varint,2,req,name=status" json:"status,omitempty"`
	WorkerAddr    *string `protobuf:"bytes,3,opt,name=worker_addr,json=workerAddr" json:"worker_addr,omitempty"`
	WorkerId      *string `protobuf:"bytes,4,opt,name=worker_id,json=workerId" json:"worker_id,omitempty"`
}

func (x *WorkerBatchUpdateTaskStatusRequest) Reset() {
	*x = WorkerBatchUpdateTaskStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerBatchUpdateTaskStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerBatchUpdateTaskStatusRequest) ProtoMessage() {}

func (x *WorkerBatchUpdateTaskStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerBatchUpdateTaskStatusRequest.ProtoReflect.Descriptor instead.
func (*WorkerBatchUpdateTaskStatusRequest) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{16}
}

func (x *WorkerBatchUpdateTaskStatusRequest) GetJobInstanceId() int64 {
	if x != nil && x.JobInstanceId != nil {
		return *x.JobInstanceId
	}
	return 0
}

func (x *WorkerBatchUpdateTaskStatusRequest) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *WorkerBatchUpdateTaskStatusRequest) GetWorkerAddr() string {
	if x != nil && x.WorkerAddr != nil {
		return *x.WorkerAddr
	}
	return ""
}

func (x *WorkerBatchUpdateTaskStatusRequest) GetWorkerId() string {
	if x != nil && x.WorkerId != nil {
		return *x.WorkerId
	}
	return ""
}

type WorkerBatchUpdateTaskStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success   *bool   `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	Message   *string `protobuf:"bytes,2,opt,name=message,def=" json:"message,omitempty"`
	AffectCnt *int32  `protobuf:"varint,3,opt,name=affect_cnt,json=affectCnt" json:"affect_cnt,omitempty"`
}

// Default values for WorkerBatchUpdateTaskStatusResponse fields.
const (
	Default_WorkerBatchUpdateTaskStatusResponse_Message = string("")
)

func (x *WorkerBatchUpdateTaskStatusResponse) Reset() {
	*x = WorkerBatchUpdateTaskStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerBatchUpdateTaskStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerBatchUpdateTaskStatusResponse) ProtoMessage() {}

func (x *WorkerBatchUpdateTaskStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerBatchUpdateTaskStatusResponse.ProtoReflect.Descriptor instead.
func (*WorkerBatchUpdateTaskStatusResponse) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{17}
}

func (x *WorkerBatchUpdateTaskStatusResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *WorkerBatchUpdateTaskStatusResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return Default_WorkerBatchUpdateTaskStatusResponse_Message
}

func (x *WorkerBatchUpdateTaskStatusResponse) GetAffectCnt() int32 {
	if x != nil && x.AffectCnt != nil {
		return *x.AffectCnt
	}
	return 0
}

// MapJobProcessor map tasks to MapTaskMaster
type WorkerMapTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId         *int64   `protobuf:"varint,1,req,name=job_id,json=jobId" json:"job_id,omitempty"`
	JobInstanceId *int64   `protobuf:"varint,2,req,name=job_instance_id,json=jobInstanceId" json:"job_instance_id,omitempty"`
	TaskId        *int64   `protobuf:"varint,3,req,name=task_id,json=taskId" json:"task_id,omitempty"`
	TaskName      *string  `protobuf:"bytes,4,req,name=task_name,json=taskName" json:"task_name,omitempty"`
	TaskBody      [][]byte `protobuf:"bytes,5,rep,name=task_body,json=taskBody" json:"task_body,omitempty"`
}

func (x *WorkerMapTaskRequest) Reset() {
	*x = WorkerMapTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerMapTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerMapTaskRequest) ProtoMessage() {}

func (x *WorkerMapTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerMapTaskRequest.ProtoReflect.Descriptor instead.
func (*WorkerMapTaskRequest) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{18}
}

func (x *WorkerMapTaskRequest) GetJobId() int64 {
	if x != nil && x.JobId != nil {
		return *x.JobId
	}
	return 0
}

func (x *WorkerMapTaskRequest) GetJobInstanceId() int64 {
	if x != nil && x.JobInstanceId != nil {
		return *x.JobInstanceId
	}
	return 0
}

func (x *WorkerMapTaskRequest) GetTaskId() int64 {
	if x != nil && x.TaskId != nil {
		return *x.TaskId
	}
	return 0
}

func (x *WorkerMapTaskRequest) GetTaskName() string {
	if x != nil && x.TaskName != nil {
		return *x.TaskName
	}
	return ""
}

func (x *WorkerMapTaskRequest) GetTaskBody() [][]byte {
	if x != nil {
		return x.TaskBody
	}
	return nil
}

type WorkerMapTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success  *bool   `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	Message  *string `protobuf:"bytes,2,opt,name=message,def=" json:"message,omitempty"`
	Overload *bool   `protobuf:"varint,3,opt,name=overload" json:"overload,omitempty"`
}

// Default values for WorkerMapTaskResponse fields.
const (
	Default_WorkerMapTaskResponse_Message = string("")
)

func (x *WorkerMapTaskResponse) Reset() {
	*x = WorkerMapTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerMapTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerMapTaskResponse) ProtoMessage() {}

func (x *WorkerMapTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerMapTaskResponse.ProtoReflect.Descriptor instead.
func (*WorkerMapTaskResponse) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{19}
}

func (x *WorkerMapTaskResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *WorkerMapTaskResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return Default_WorkerMapTaskResponse_Message
}

func (x *WorkerMapTaskResponse) GetOverload() bool {
	if x != nil && x.Overload != nil {
		return *x.Overload
	}
	return false
}

// Worker clear tasks by jobInstanceId to Server
type WorkerClearTasksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobInstanceId *int64 `protobuf:"varint,1,req,name=job_instance_id,json=jobInstanceId" json:"job_instance_id,omitempty"`
}

func (x *WorkerClearTasksRequest) Reset() {
	*x = WorkerClearTasksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerClearTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerClearTasksRequest) ProtoMessage() {}

func (x *WorkerClearTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerClearTasksRequest.ProtoReflect.Descriptor instead.
func (*WorkerClearTasksRequest) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{20}
}

func (x *WorkerClearTasksRequest) GetJobInstanceId() int64 {
	if x != nil && x.JobInstanceId != nil {
		return *x.JobInstanceId
	}
	return 0
}

type WorkerClearTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success *bool   `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	Message *string `protobuf:"bytes,2,opt,name=message,def=" json:"message,omitempty"`
	Count   *int32  `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
}

// Default values for WorkerClearTasksResponse fields.
const (
	Default_WorkerClearTasksResponse_Message = string("")
)

func (x *WorkerClearTasksResponse) Reset() {
	*x = WorkerClearTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerClearTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerClearTasksResponse) ProtoMessage() {}

func (x *WorkerClearTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerClearTasksResponse.ProtoReflect.Descriptor instead.
func (*WorkerClearTasksResponse) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{21}
}

func (x *WorkerClearTasksResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *WorkerClearTasksResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return Default_WorkerClearTasksResponse_Message
}

func (x *WorkerClearTasksResponse) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

// Worker create a task to Server
type WorkerCreateTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId         *int64  `protobuf:"varint,1,req,name=job_id,json=jobId" json:"job_id,omitempty"`
	JobInstanceId *int64  `protobuf:"varint,2,req,name=job_instance_id,json=jobInstanceId" json:"job_instance_id,omitempty"`
	TaskId        *int64  `protobuf:"varint,3,req,name=task_id,json=taskId" json:"task_id,omitempty"`
	TaskName      *string `protobuf:"bytes,4,req,name=task_name,json=taskName" json:"task_name,omitempty"`
	TaskBody      []byte  `protobuf:"bytes,5,req,name=task_body,json=taskBody" json:"task_body,omitempty"`
	DeliveryId    *int64  `protobuf:"varint,6,opt,name=delivery_id,json=deliveryId" json:"delivery_id,omitempty"`
	LabelMap      *string `protobuf:"bytes,7,opt,name=label_map,json=labelMap" json:"label_map,omitempty"`
}

func (x *WorkerCreateTaskRequest) Reset() {
	*x = WorkerCreateTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerCreateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerCreateTaskRequest) ProtoMessage() {}

func (x *WorkerCreateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerCreateTaskRequest.ProtoReflect.Descriptor instead.
func (*WorkerCreateTaskRequest) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{22}
}

func (x *WorkerCreateTaskRequest) GetJobId() int64 {
	if x != nil && x.JobId != nil {
		return *x.JobId
	}
	return 0
}

func (x *WorkerCreateTaskRequest) GetJobInstanceId() int64 {
	if x != nil && x.JobInstanceId != nil {
		return *x.JobInstanceId
	}
	return 0
}

func (x *WorkerCreateTaskRequest) GetTaskId() int64 {
	if x != nil && x.TaskId != nil {
		return *x.TaskId
	}
	return 0
}

func (x *WorkerCreateTaskRequest) GetTaskName() string {
	if x != nil && x.TaskName != nil {
		return *x.TaskName
	}
	return ""
}

func (x *WorkerCreateTaskRequest) GetTaskBody() []byte {
	if x != nil {
		return x.TaskBody
	}
	return nil
}

func (x *WorkerCreateTaskRequest) GetDeliveryId() int64 {
	if x != nil && x.DeliveryId != nil {
		return *x.DeliveryId
	}
	return 0
}

func (x *WorkerCreateTaskRequest) GetLabelMap() string {
	if x != nil && x.LabelMap != nil {
		return *x.LabelMap
	}
	return ""
}

type WorkerCreateTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success    *bool   `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	Message    *string `protobuf:"bytes,2,opt,name=message,def=" json:"message,omitempty"`
	DeliveryId *int64  `protobuf:"varint,3,opt,name=delivery_id,json=deliveryId" json:"delivery_id,omitempty"`
}

// Default values for WorkerCreateTaskResponse fields.
const (
	Default_WorkerCreateTaskResponse_Message = string("")
)

func (x *WorkerCreateTaskResponse) Reset() {
	*x = WorkerCreateTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerCreateTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerCreateTaskResponse) ProtoMessage() {}

func (x *WorkerCreateTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerCreateTaskResponse.ProtoReflect.Descriptor instead.
func (*WorkerCreateTaskResponse) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{23}
}

func (x *WorkerCreateTaskResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *WorkerCreateTaskResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return Default_WorkerCreateTaskResponse_Message
}

func (x *WorkerCreateTaskResponse) GetDeliveryId() int64 {
	if x != nil && x.DeliveryId != nil {
		return *x.DeliveryId
	}
	return 0
}

// Worker batch create tasks to Server
type WorkerBatchCreateTasksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobInstanceId *int64                     `protobuf:"varint,1,req,name=job_instance_id,json=jobInstanceId" json:"job_instance_id,omitempty"`
	Task          []*WorkerCreateTaskRequest `protobuf:"bytes,2,rep,name=task" json:"task,omitempty"`
	DeliveryId    *int64                     `protobuf:"varint,3,opt,name=delivery_id,json=deliveryId" json:"delivery_id,omitempty"`
	WorkerId      *string                    `protobuf:"bytes,4,opt,name=worker_id,json=workerId" json:"worker_id,omitempty"`
	WorkerAddr    *string                    `protobuf:"bytes,5,opt,name=worker_addr,json=workerAddr" json:"worker_addr,omitempty"`
}

func (x *WorkerBatchCreateTasksRequest) Reset() {
	*x = WorkerBatchCreateTasksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerBatchCreateTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerBatchCreateTasksRequest) ProtoMessage() {}

func (x *WorkerBatchCreateTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerBatchCreateTasksRequest.ProtoReflect.Descriptor instead.
func (*WorkerBatchCreateTasksRequest) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{24}
}

func (x *WorkerBatchCreateTasksRequest) GetJobInstanceId() int64 {
	if x != nil && x.JobInstanceId != nil {
		return *x.JobInstanceId
	}
	return 0
}

func (x *WorkerBatchCreateTasksRequest) GetTask() []*WorkerCreateTaskRequest {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *WorkerBatchCreateTasksRequest) GetDeliveryId() int64 {
	if x != nil && x.DeliveryId != nil {
		return *x.DeliveryId
	}
	return 0
}

func (x *WorkerBatchCreateTasksRequest) GetWorkerId() string {
	if x != nil && x.WorkerId != nil {
		return *x.WorkerId
	}
	return ""
}

func (x *WorkerBatchCreateTasksRequest) GetWorkerAddr() string {
	if x != nil && x.WorkerAddr != nil {
		return *x.WorkerAddr
	}
	return ""
}

type WorkerBatchCreateTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success    *bool   `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	Message    *string `protobuf:"bytes,2,opt,name=message,def=" json:"message,omitempty"`
	DeliveryId *int64  `protobuf:"varint,3,opt,name=delivery_id,json=deliveryId" json:"delivery_id,omitempty"`
}

// Default values for WorkerBatchCreateTasksResponse fields.
const (
	Default_WorkerBatchCreateTasksResponse_Message = string("")
)

func (x *WorkerBatchCreateTasksResponse) Reset() {
	*x = WorkerBatchCreateTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerBatchCreateTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerBatchCreateTasksResponse) ProtoMessage() {}

func (x *WorkerBatchCreateTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerBatchCreateTasksResponse.ProtoReflect.Descriptor instead.
func (*WorkerBatchCreateTasksResponse) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{25}
}

func (x *WorkerBatchCreateTasksResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *WorkerBatchCreateTasksResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return Default_WorkerBatchCreateTasksResponse_Message
}

func (x *WorkerBatchCreateTasksResponse) GetDeliveryId() int64 {
	if x != nil && x.DeliveryId != nil {
		return *x.DeliveryId
	}
	return 0
}

// Worker report task status to Server
type WorkerReportTaskStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId      *string `protobuf:"bytes,1,req,name=unique_id,json=uniqueId" json:"unique_id,omitempty"`
	Status        *int32  `protobuf:"varint,2,req,name=status" json:"status,omitempty"`
	WorkerAddress *string `protobuf:"bytes,3,opt,name=worker_address,json=workerAddress" json:"worker_address,omitempty"`
	WorkerId      *string `protobuf:"bytes,4,opt,name=worker_id,json=workerId" json:"worker_id,omitempty"`
	DeliveryId    *int64  `protobuf:"varint,5,opt,name=delivery_id,json=deliveryId" json:"delivery_id,omitempty"`
	JobInstanceId *int64  `protobuf:"varint,6,req,name=job_instance_id,json=jobInstanceId" json:"job_instance_id,omitempty"`
}

func (x *WorkerReportTaskStatusRequest) Reset() {
	*x = WorkerReportTaskStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerReportTaskStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerReportTaskStatusRequest) ProtoMessage() {}

func (x *WorkerReportTaskStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerReportTaskStatusRequest.ProtoReflect.Descriptor instead.
func (*WorkerReportTaskStatusRequest) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{26}
}

func (x *WorkerReportTaskStatusRequest) GetUniqueId() string {
	if x != nil && x.UniqueId != nil {
		return *x.UniqueId
	}
	return ""
}

func (x *WorkerReportTaskStatusRequest) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *WorkerReportTaskStatusRequest) GetWorkerAddress() string {
	if x != nil && x.WorkerAddress != nil {
		return *x.WorkerAddress
	}
	return ""
}

func (x *WorkerReportTaskStatusRequest) GetWorkerId() string {
	if x != nil && x.WorkerId != nil {
		return *x.WorkerId
	}
	return ""
}

func (x *WorkerReportTaskStatusRequest) GetDeliveryId() int64 {
	if x != nil && x.DeliveryId != nil {
		return *x.DeliveryId
	}
	return 0
}

func (x *WorkerReportTaskStatusRequest) GetJobInstanceId() int64 {
	if x != nil && x.JobInstanceId != nil {
		return *x.JobInstanceId
	}
	return 0
}

type WorkerReportTaskStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success    *bool   `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	Message    *string `protobuf:"bytes,2,opt,name=message,def=" json:"message,omitempty"`
	DeliveryId *int64  `protobuf:"varint,3,opt,name=delivery_id,json=deliveryId" json:"delivery_id,omitempty"`
}

// Default values for WorkerReportTaskStatusResponse fields.
const (
	Default_WorkerReportTaskStatusResponse_Message = string("")
)

func (x *WorkerReportTaskStatusResponse) Reset() {
	*x = WorkerReportTaskStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerReportTaskStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerReportTaskStatusResponse) ProtoMessage() {}

func (x *WorkerReportTaskStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerReportTaskStatusResponse.ProtoReflect.Descriptor instead.
func (*WorkerReportTaskStatusResponse) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{27}
}

func (x *WorkerReportTaskStatusResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *WorkerReportTaskStatusResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return Default_WorkerReportTaskStatusResponse_Message
}

func (x *WorkerReportTaskStatusResponse) GetDeliveryId() int64 {
	if x != nil && x.DeliveryId != nil {
		return *x.DeliveryId
	}
	return 0
}

// Worker batch report task statuses to Server
type WorkerBatchReportTaskStatuesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobInstanceId         *int64              `protobuf:"varint,1,req,name=job_instance_id,json=jobInstanceId" json:"job_instance_id,omitempty"`
	TaskStatues           []*BatchTaskStatues `protobuf:"bytes,2,rep,name=task_statues,json=taskStatues" json:"task_statues,omitempty"`
	DeliveryId            *int64              `protobuf:"varint,3,opt,name=delivery_id,json=deliveryId" json:"delivery_id,omitempty"`
	AlreadyUnConfirmRetry *bool               `protobuf:"varint,4,opt,name=already_unConfirm_retry,json=alreadyUnConfirmRetry" json:"already_unConfirm_retry,omitempty"`
	GroupId               *string             `protobuf:"bytes,5,opt,name=group_id,json=groupId" json:"group_id,omitempty"`
}

func (x *WorkerBatchReportTaskStatuesRequest) Reset() {
	*x = WorkerBatchReportTaskStatuesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerBatchReportTaskStatuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerBatchReportTaskStatuesRequest) ProtoMessage() {}

func (x *WorkerBatchReportTaskStatuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerBatchReportTaskStatuesRequest.ProtoReflect.Descriptor instead.
func (*WorkerBatchReportTaskStatuesRequest) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{28}
}

func (x *WorkerBatchReportTaskStatuesRequest) GetJobInstanceId() int64 {
	if x != nil && x.JobInstanceId != nil {
		return *x.JobInstanceId
	}
	return 0
}

func (x *WorkerBatchReportTaskStatuesRequest) GetTaskStatues() []*BatchTaskStatues {
	if x != nil {
		return x.TaskStatues
	}
	return nil
}

func (x *WorkerBatchReportTaskStatuesRequest) GetDeliveryId() int64 {
	if x != nil && x.DeliveryId != nil {
		return *x.DeliveryId
	}
	return 0
}

func (x *WorkerBatchReportTaskStatuesRequest) GetAlreadyUnConfirmRetry() bool {
	if x != nil && x.AlreadyUnConfirmRetry != nil {
		return *x.AlreadyUnConfirmRetry
	}
	return false
}

func (x *WorkerBatchReportTaskStatuesRequest) GetGroupId() string {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return ""
}

type WorkerBatchReportTaskStatuesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success    *bool   `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	Message    *string `protobuf:"bytes,2,opt,name=message,def=" json:"message,omitempty"`
	DeliveryId *int64  `protobuf:"varint,3,opt,name=delivery_id,json=deliveryId" json:"delivery_id,omitempty"`
	AffectCnt  *int32  `protobuf:"varint,4,opt,name=affect_cnt,json=affectCnt" json:"affect_cnt,omitempty"`
}

// Default values for WorkerBatchReportTaskStatuesResponse fields.
const (
	Default_WorkerBatchReportTaskStatuesResponse_Message = string("")
)

func (x *WorkerBatchReportTaskStatuesResponse) Reset() {
	*x = WorkerBatchReportTaskStatuesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerBatchReportTaskStatuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerBatchReportTaskStatuesResponse) ProtoMessage() {}

func (x *WorkerBatchReportTaskStatuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerBatchReportTaskStatuesResponse.ProtoReflect.Descriptor instead.
func (*WorkerBatchReportTaskStatuesResponse) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{29}
}

func (x *WorkerBatchReportTaskStatuesResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *WorkerBatchReportTaskStatuesResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return Default_WorkerBatchReportTaskStatuesResponse_Message
}

func (x *WorkerBatchReportTaskStatuesResponse) GetDeliveryId() int64 {
	if x != nil && x.DeliveryId != nil {
		return *x.DeliveryId
	}
	return 0
}

func (x *WorkerBatchReportTaskStatuesResponse) GetAffectCnt() int32 {
	if x != nil && x.AffectCnt != nil {
		return *x.AffectCnt
	}
	return 0
}

type BatchTaskStatues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      *int32            `protobuf:"varint,1,req,name=status" json:"status,omitempty"`
	WorkerAddr  *string           `protobuf:"bytes,2,opt,name=worker_addr,json=workerAddr" json:"worker_addr,omitempty"`
	WorkerId    *string           `protobuf:"bytes,3,opt,name=worker_id,json=workerId" json:"worker_id,omitempty"`
	TaskIds     []int64           `protobuf:"varint,4,rep,name=task_ids,json=taskIds" json:"task_ids,omitempty"`
	TaskStatues []*TaskStatusInfo `protobuf:"bytes,5,rep,name=task_statues,json=taskStatues" json:"task_statues,omitempty"`
}

func (x *BatchTaskStatues) Reset() {
	*x = BatchTaskStatues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchTaskStatues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchTaskStatues) ProtoMessage() {}

func (x *BatchTaskStatues) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchTaskStatues.ProtoReflect.Descriptor instead.
func (*BatchTaskStatues) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{30}
}

func (x *BatchTaskStatues) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *BatchTaskStatues) GetWorkerAddr() string {
	if x != nil && x.WorkerAddr != nil {
		return *x.WorkerAddr
	}
	return ""
}

func (x *BatchTaskStatues) GetWorkerId() string {
	if x != nil && x.WorkerId != nil {
		return *x.WorkerId
	}
	return ""
}

func (x *BatchTaskStatues) GetTaskIds() []int64 {
	if x != nil {
		return x.TaskIds
	}
	return nil
}

func (x *BatchTaskStatues) GetTaskStatues() []*TaskStatusInfo {
	if x != nil {
		return x.TaskStatues
	}
	return nil
}

// Worker report task status to Server
type WorkerReportTaskListStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobInstanceId *int64  `protobuf:"varint,1,req,name=job_instance_id,json=jobInstanceId" json:"job_instance_id,omitempty"`
	TaskId        []int64 `protobuf:"varint,2,rep,name=task_id,json=taskId" json:"task_id,omitempty"`
	Status        *int32  `protobuf:"varint,3,req,name=status" json:"status,omitempty"`
}

func (x *WorkerReportTaskListStatusRequest) Reset() {
	*x = WorkerReportTaskListStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerReportTaskListStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerReportTaskListStatusRequest) ProtoMessage() {}

func (x *WorkerReportTaskListStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerReportTaskListStatusRequest.ProtoReflect.Descriptor instead.
func (*WorkerReportTaskListStatusRequest) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{31}
}

func (x *WorkerReportTaskListStatusRequest) GetJobInstanceId() int64 {
	if x != nil && x.JobInstanceId != nil {
		return *x.JobInstanceId
	}
	return 0
}

func (x *WorkerReportTaskListStatusRequest) GetTaskId() []int64 {
	if x != nil {
		return x.TaskId
	}
	return nil
}

func (x *WorkerReportTaskListStatusRequest) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

type WorkerReportTaskListStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success *bool   `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	Message *string `protobuf:"bytes,2,opt,name=message,def=" json:"message,omitempty"`
}

// Default values for WorkerReportTaskListStatusResponse fields.
const (
	Default_WorkerReportTaskListStatusResponse_Message = string("")
)

func (x *WorkerReportTaskListStatusResponse) Reset() {
	*x = WorkerReportTaskListStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerReportTaskListStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerReportTaskListStatusResponse) ProtoMessage() {}

func (x *WorkerReportTaskListStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerReportTaskListStatusResponse.ProtoReflect.Descriptor instead.
func (*WorkerReportTaskListStatusResponse) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{32}
}

func (x *WorkerReportTaskListStatusResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *WorkerReportTaskListStatusResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return Default_WorkerReportTaskListStatusResponse_Message
}

// Worker report task progress to Server
type WorkerReportTaskProgressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId *string  `protobuf:"bytes,1,req,name=unique_id,json=uniqueId" json:"unique_id,omitempty"`
	Progress *float32 `protobuf:"fixed32,2,req,name=progress" json:"progress,omitempty"`
}

func (x *WorkerReportTaskProgressRequest) Reset() {
	*x = WorkerReportTaskProgressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerReportTaskProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerReportTaskProgressRequest) ProtoMessage() {}

func (x *WorkerReportTaskProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerReportTaskProgressRequest.ProtoReflect.Descriptor instead.
func (*WorkerReportTaskProgressRequest) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{33}
}

func (x *WorkerReportTaskProgressRequest) GetUniqueId() string {
	if x != nil && x.UniqueId != nil {
		return *x.UniqueId
	}
	return ""
}

func (x *WorkerReportTaskProgressRequest) GetProgress() float32 {
	if x != nil && x.Progress != nil {
		return *x.Progress
	}
	return 0
}

type WorkerReportTaskProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success *bool   `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	Message *string `protobuf:"bytes,2,opt,name=message,def=" json:"message,omitempty"`
}

// Default values for WorkerReportTaskProgressResponse fields.
const (
	Default_WorkerReportTaskProgressResponse_Message = string("")
)

func (x *WorkerReportTaskProgressResponse) Reset() {
	*x = WorkerReportTaskProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerReportTaskProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerReportTaskProgressResponse) ProtoMessage() {}

func (x *WorkerReportTaskProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerReportTaskProgressResponse.ProtoReflect.Descriptor instead.
func (*WorkerReportTaskProgressResponse) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{34}
}

func (x *WorkerReportTaskProgressResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *WorkerReportTaskProgressResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return Default_WorkerReportTaskProgressResponse_Message
}

// Worker pull tasks from Server
type TaskMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId   *int64  `protobuf:"varint,1,req,name=task_id,json=taskId" json:"task_id,omitempty"`
	TaskName *string `protobuf:"bytes,2,req,name=task_name,json=taskName" json:"task_name,omitempty"`
	TaskBody []byte  `protobuf:"bytes,3,req,name=task_body,json=taskBody" json:"task_body,omitempty"`
}

func (x *TaskMessage) Reset() {
	*x = TaskMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskMessage) ProtoMessage() {}

func (x *TaskMessage) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskMessage.ProtoReflect.Descriptor instead.
func (*TaskMessage) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{35}
}

func (x *TaskMessage) GetTaskId() int64 {
	if x != nil && x.TaskId != nil {
		return *x.TaskId
	}
	return 0
}

func (x *TaskMessage) GetTaskName() string {
	if x != nil && x.TaskName != nil {
		return *x.TaskName
	}
	return ""
}

func (x *TaskMessage) GetTaskBody() []byte {
	if x != nil {
		return x.TaskBody
	}
	return nil
}

type WorkerPullTasksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobInstanceId *int64 `protobuf:"varint,1,req,name=job_instance_id,json=jobInstanceId" json:"job_instance_id,omitempty"`
	PageSize      *int32 `protobuf:"varint,2,req,name=page_size,json=pageSize" json:"page_size,omitempty"`
}

func (x *WorkerPullTasksRequest) Reset() {
	*x = WorkerPullTasksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerPullTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerPullTasksRequest) ProtoMessage() {}

func (x *WorkerPullTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerPullTasksRequest.ProtoReflect.Descriptor instead.
func (*WorkerPullTasksRequest) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{36}
}

func (x *WorkerPullTasksRequest) GetJobInstanceId() int64 {
	if x != nil && x.JobInstanceId != nil {
		return *x.JobInstanceId
	}
	return 0
}

func (x *WorkerPullTasksRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

type WorkerPullTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success     *bool          `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	Message     *string        `protobuf:"bytes,2,opt,name=message,def=" json:"message,omitempty"`
	TaskMessage []*TaskMessage `protobuf:"bytes,3,rep,name=task_message,json=taskMessage" json:"task_message,omitempty"`
}

// Default values for WorkerPullTasksResponse fields.
const (
	Default_WorkerPullTasksResponse_Message = string("")
)

func (x *WorkerPullTasksResponse) Reset() {
	*x = WorkerPullTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerPullTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerPullTasksResponse) ProtoMessage() {}

func (x *WorkerPullTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerPullTasksResponse.ProtoReflect.Descriptor instead.
func (*WorkerPullTasksResponse) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{37}
}

func (x *WorkerPullTasksResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *WorkerPullTasksResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return Default_WorkerPullTasksResponse_Message
}

func (x *WorkerPullTasksResponse) GetTaskMessage() []*TaskMessage {
	if x != nil {
		return x.TaskMessage
	}
	return nil
}

// Worker query jobInstance status
type WorkerQueryJobInstanceStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobInstanceId *int64 `protobuf:"varint,1,req,name=job_instance_id,json=jobInstanceId" json:"job_instance_id,omitempty"`
}

func (x *WorkerQueryJobInstanceStatusRequest) Reset() {
	*x = WorkerQueryJobInstanceStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerQueryJobInstanceStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerQueryJobInstanceStatusRequest) ProtoMessage() {}

func (x *WorkerQueryJobInstanceStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerQueryJobInstanceStatusRequest.ProtoReflect.Descriptor instead.
func (*WorkerQueryJobInstanceStatusRequest) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{38}
}

func (x *WorkerQueryJobInstanceStatusRequest) GetJobInstanceId() int64 {
	if x != nil && x.JobInstanceId != nil {
		return *x.JobInstanceId
	}
	return 0
}

type WorkerQueryJobInstanceStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success *bool   `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	Message *string `protobuf:"bytes,2,opt,name=message,def=" json:"message,omitempty"`
	Status  *int32  `protobuf:"varint,3,req,name=status" json:"status,omitempty"`
}

// Default values for WorkerQueryJobInstanceStatusResponse fields.
const (
	Default_WorkerQueryJobInstanceStatusResponse_Message = string("")
)

func (x *WorkerQueryJobInstanceStatusResponse) Reset() {
	*x = WorkerQueryJobInstanceStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerQueryJobInstanceStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerQueryJobInstanceStatusResponse) ProtoMessage() {}

func (x *WorkerQueryJobInstanceStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerQueryJobInstanceStatusResponse.ProtoReflect.Descriptor instead.
func (*WorkerQueryJobInstanceStatusResponse) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{39}
}

func (x *WorkerQueryJobInstanceStatusResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *WorkerQueryJobInstanceStatusResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return Default_WorkerQueryJobInstanceStatusResponse_Message
}

func (x *WorkerQueryJobInstanceStatusResponse) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

// Container report task status
type ContainerReportTaskStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId                   *int64  `protobuf:"varint,1,req,name=job_id,json=jobId" json:"job_id,omitempty"`
	JobInstanceId           *int64  `protobuf:"varint,2,req,name=job_instance_id,json=jobInstanceId" json:"job_instance_id,omitempty"`
	TaskId                  *int64  `protobuf:"varint,3,req,name=task_id,json=taskId" json:"task_id,omitempty"`
	Status                  *int32  `protobuf:"varint,4,req,name=status" json:"status,omitempty"`
	WorkerAddr              *string `protobuf:"bytes,5,req,name=worker_addr,json=workerAddr" json:"worker_addr,omitempty"`
	WorkerId                *string `protobuf:"bytes,6,req,name=worker_id,json=workerId" json:"worker_id,omitempty"`
	Result                  *string `protobuf:"bytes,7,opt,name=result" json:"result,omitempty"`
	TaskName                *string `protobuf:"bytes,8,opt,name=task_name,json=taskName" json:"task_name,omitempty"`
	InstanceMasterActorPath *string `protobuf:"bytes,9,opt,name=instance_master_actorPath,json=instanceMasterActorPath" json:"instance_master_actorPath,omitempty"`
	TimeType                *int32  `protobuf:"varint,10,opt,name=time_type,json=timeType" json:"time_type,omitempty"`
	SerialNum               *int64  `protobuf:"varint,11,opt,name=serial_num,json=serialNum" json:"serial_num,omitempty"`
	Progress                *string `protobuf:"bytes,12,opt,name=progress" json:"progress,omitempty"`
	TraceId                 *string `protobuf:"bytes,13,opt,name=traceId" json:"traceId,omitempty"`
}

func (x *ContainerReportTaskStatusRequest) Reset() {
	*x = ContainerReportTaskStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerReportTaskStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerReportTaskStatusRequest) ProtoMessage() {}

func (x *ContainerReportTaskStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerReportTaskStatusRequest.ProtoReflect.Descriptor instead.
func (*ContainerReportTaskStatusRequest) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{40}
}

func (x *ContainerReportTaskStatusRequest) GetJobId() int64 {
	if x != nil && x.JobId != nil {
		return *x.JobId
	}
	return 0
}

func (x *ContainerReportTaskStatusRequest) GetJobInstanceId() int64 {
	if x != nil && x.JobInstanceId != nil {
		return *x.JobInstanceId
	}
	return 0
}

func (x *ContainerReportTaskStatusRequest) GetTaskId() int64 {
	if x != nil && x.TaskId != nil {
		return *x.TaskId
	}
	return 0
}

func (x *ContainerReportTaskStatusRequest) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *ContainerReportTaskStatusRequest) GetWorkerAddr() string {
	if x != nil && x.WorkerAddr != nil {
		return *x.WorkerAddr
	}
	return ""
}

func (x *ContainerReportTaskStatusRequest) GetWorkerId() string {
	if x != nil && x.WorkerId != nil {
		return *x.WorkerId
	}
	return ""
}

func (x *ContainerReportTaskStatusRequest) GetResult() string {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return ""
}

func (x *ContainerReportTaskStatusRequest) GetTaskName() string {
	if x != nil && x.TaskName != nil {
		return *x.TaskName
	}
	return ""
}

func (x *ContainerReportTaskStatusRequest) GetInstanceMasterActorPath() string {
	if x != nil && x.InstanceMasterActorPath != nil {
		return *x.InstanceMasterActorPath
	}
	return ""
}

func (x *ContainerReportTaskStatusRequest) GetTimeType() int32 {
	if x != nil && x.TimeType != nil {
		return *x.TimeType
	}
	return 0
}

func (x *ContainerReportTaskStatusRequest) GetSerialNum() int64 {
	if x != nil && x.SerialNum != nil {
		return *x.SerialNum
	}
	return 0
}

func (x *ContainerReportTaskStatusRequest) GetProgress() string {
	if x != nil && x.Progress != nil {
		return *x.Progress
	}
	return ""
}

func (x *ContainerReportTaskStatusRequest) GetTraceId() string {
	if x != nil && x.TraceId != nil {
		return *x.TraceId
	}
	return ""
}

type ContainerReportTaskStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success *bool   `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	Message *string `protobuf:"bytes,2,opt,name=message,def=" json:"message,omitempty"`
}

// Default values for ContainerReportTaskStatusResponse fields.
const (
	Default_ContainerReportTaskStatusResponse_Message = string("")
)

func (x *ContainerReportTaskStatusResponse) Reset() {
	*x = ContainerReportTaskStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerReportTaskStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerReportTaskStatusResponse) ProtoMessage() {}

func (x *ContainerReportTaskStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerReportTaskStatusResponse.ProtoReflect.Descriptor instead.
func (*ContainerReportTaskStatusResponse) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{41}
}

func (x *ContainerReportTaskStatusResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *ContainerReportTaskStatusResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return Default_ContainerReportTaskStatusResponse_Message
}

type ContainerBatchReportTaskStatuesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId                 *int64            `protobuf:"varint,1,req,name=job_id,json=jobId" json:"job_id,omitempty"`
	JobInstanceId         *int64            `protobuf:"varint,2,req,name=job_instance_id,json=jobInstanceId" json:"job_instance_id,omitempty"`
	TaskStatues           []*TaskStatusInfo `protobuf:"bytes,3,rep,name=task_statues,json=taskStatues" json:"task_statues,omitempty"`
	TaskMasterAkkaPath    *string           `protobuf:"bytes,4,req,name=task_master_akka_path,json=taskMasterAkkaPath" json:"task_master_akka_path,omitempty"`
	WorkerAddr            *string           `protobuf:"bytes,5,req,name=worker_addr,json=workerAddr" json:"worker_addr,omitempty"`
	WorkerId              *string           `protobuf:"bytes,6,req,name=worker_id,json=workerId" json:"worker_id,omitempty"`
	DeliveryId            *int64            `protobuf:"varint,7,opt,name=delivery_id,json=deliveryId" json:"delivery_id,omitempty"`
	AlreadyUnConfirmRetry *bool             `protobuf:"varint,8,opt,name=already_unConfirm_retry,json=alreadyUnConfirmRetry" json:"already_unConfirm_retry,omitempty"`
	SerialNum             *int64            `protobuf:"varint,9,opt,name=serial_num,json=serialNum" json:"serial_num,omitempty"`
	MetricsJson           *string           `protobuf:"bytes,10,opt,name=metrics_json,json=metricsJson" json:"metrics_json,omitempty"`
}

func (x *ContainerBatchReportTaskStatuesRequest) Reset() {
	*x = ContainerBatchReportTaskStatuesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerBatchReportTaskStatuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerBatchReportTaskStatuesRequest) ProtoMessage() {}

func (x *ContainerBatchReportTaskStatuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerBatchReportTaskStatuesRequest.ProtoReflect.Descriptor instead.
func (*ContainerBatchReportTaskStatuesRequest) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{42}
}

func (x *ContainerBatchReportTaskStatuesRequest) GetJobId() int64 {
	if x != nil && x.JobId != nil {
		return *x.JobId
	}
	return 0
}

func (x *ContainerBatchReportTaskStatuesRequest) GetJobInstanceId() int64 {
	if x != nil && x.JobInstanceId != nil {
		return *x.JobInstanceId
	}
	return 0
}

func (x *ContainerBatchReportTaskStatuesRequest) GetTaskStatues() []*TaskStatusInfo {
	if x != nil {
		return x.TaskStatues
	}
	return nil
}

func (x *ContainerBatchReportTaskStatuesRequest) GetTaskMasterAkkaPath() string {
	if x != nil && x.TaskMasterAkkaPath != nil {
		return *x.TaskMasterAkkaPath
	}
	return ""
}

func (x *ContainerBatchReportTaskStatuesRequest) GetWorkerAddr() string {
	if x != nil && x.WorkerAddr != nil {
		return *x.WorkerAddr
	}
	return ""
}

func (x *ContainerBatchReportTaskStatuesRequest) GetWorkerId() string {
	if x != nil && x.WorkerId != nil {
		return *x.WorkerId
	}
	return ""
}

func (x *ContainerBatchReportTaskStatuesRequest) GetDeliveryId() int64 {
	if x != nil && x.DeliveryId != nil {
		return *x.DeliveryId
	}
	return 0
}

func (x *ContainerBatchReportTaskStatuesRequest) GetAlreadyUnConfirmRetry() bool {
	if x != nil && x.AlreadyUnConfirmRetry != nil {
		return *x.AlreadyUnConfirmRetry
	}
	return false
}

func (x *ContainerBatchReportTaskStatuesRequest) GetSerialNum() int64 {
	if x != nil && x.SerialNum != nil {
		return *x.SerialNum
	}
	return 0
}

func (x *ContainerBatchReportTaskStatuesRequest) GetMetricsJson() string {
	if x != nil && x.MetricsJson != nil {
		return *x.MetricsJson
	}
	return ""
}

type TaskStatusInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId   *int64  `protobuf:"varint,1,req,name=task_id,json=taskId" json:"task_id,omitempty"`
	Status   *int32  `protobuf:"varint,2,req,name=status" json:"status,omitempty"`
	Result   *string `protobuf:"bytes,3,opt,name=result" json:"result,omitempty"`
	TaskName *string `protobuf:"bytes,4,opt,name=task_name,json=taskName" json:"task_name,omitempty"`
	Progress *string `protobuf:"bytes,5,opt,name=progress" json:"progress,omitempty"`
	TraceId  *string `protobuf:"bytes,6,opt,name=traceId" json:"traceId,omitempty"`
}

func (x *TaskStatusInfo) Reset() {
	*x = TaskStatusInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskStatusInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskStatusInfo) ProtoMessage() {}

func (x *TaskStatusInfo) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskStatusInfo.ProtoReflect.Descriptor instead.
func (*TaskStatusInfo) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{43}
}

func (x *TaskStatusInfo) GetTaskId() int64 {
	if x != nil && x.TaskId != nil {
		return *x.TaskId
	}
	return 0
}

func (x *TaskStatusInfo) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *TaskStatusInfo) GetResult() string {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return ""
}

func (x *TaskStatusInfo) GetTaskName() string {
	if x != nil && x.TaskName != nil {
		return *x.TaskName
	}
	return ""
}

func (x *TaskStatusInfo) GetProgress() string {
	if x != nil && x.Progress != nil {
		return *x.Progress
	}
	return ""
}

func (x *TaskStatusInfo) GetTraceId() string {
	if x != nil && x.TraceId != nil {
		return *x.TraceId
	}
	return ""
}

type ContainerBatchReportTaskStatuesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success    *bool   `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	Message    *string `protobuf:"bytes,2,opt,name=message,def=" json:"message,omitempty"`
	DeliveryId *int64  `protobuf:"varint,3,opt,name=delivery_id,json=deliveryId" json:"delivery_id,omitempty"`
}

// Default values for ContainerBatchReportTaskStatuesResponse fields.
const (
	Default_ContainerBatchReportTaskStatuesResponse_Message = string("")
)

func (x *ContainerBatchReportTaskStatuesResponse) Reset() {
	*x = ContainerBatchReportTaskStatuesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerBatchReportTaskStatuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerBatchReportTaskStatuesResponse) ProtoMessage() {}

func (x *ContainerBatchReportTaskStatuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerBatchReportTaskStatuesResponse.ProtoReflect.Descriptor instead.
func (*ContainerBatchReportTaskStatuesResponse) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{44}
}

func (x *ContainerBatchReportTaskStatuesResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *ContainerBatchReportTaskStatuesResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return Default_ContainerBatchReportTaskStatuesResponse_Message
}

func (x *ContainerBatchReportTaskStatuesResponse) GetDeliveryId() int64 {
	if x != nil && x.DeliveryId != nil {
		return *x.DeliveryId
	}
	return 0
}

type ContainerCheckZombieRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobInstanceId []int64 `protobuf:"varint,1,rep,name=job_instance_id,json=jobInstanceId" json:"job_instance_id,omitempty"`
}

func (x *ContainerCheckZombieRequest) Reset() {
	*x = ContainerCheckZombieRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerCheckZombieRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerCheckZombieRequest) ProtoMessage() {}

func (x *ContainerCheckZombieRequest) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerCheckZombieRequest.ProtoReflect.Descriptor instead.
func (*ContainerCheckZombieRequest) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{45}
}

func (x *ContainerCheckZombieRequest) GetJobInstanceId() []int64 {
	if x != nil {
		return x.JobInstanceId
	}
	return nil
}

type ContainerCheckZombieResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZombieJobInstanceId []int64 `protobuf:"varint,1,rep,name=zombie_job_instance_id,json=zombieJobInstanceId" json:"zombie_job_instance_id,omitempty"`
}

func (x *ContainerCheckZombieResponse) Reset() {
	*x = ContainerCheckZombieResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerCheckZombieResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerCheckZombieResponse) ProtoMessage() {}

func (x *ContainerCheckZombieResponse) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerCheckZombieResponse.ProtoReflect.Descriptor instead.
func (*ContainerCheckZombieResponse) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{46}
}

func (x *ContainerCheckZombieResponse) GetZombieJobInstanceId() []int64 {
	if x != nil {
		return x.ZombieJobInstanceId
	}
	return nil
}

// Pull model, master notify all workers to init PullManager
type MasterNotifyWorkerPullRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobInstanceId      *int64  `protobuf:"varint,1,req,name=job_instance_id,json=jobInstanceId" json:"job_instance_id,omitempty"`
	PageSize           *int32  `protobuf:"varint,2,req,name=page_size,json=pageSize" json:"page_size,omitempty"`
	QueueSize          *int32  `protobuf:"varint,3,req,name=queue_size,json=queueSize" json:"queue_size,omitempty"`
	ConsumerSize       *int32  `protobuf:"varint,4,req,name=consumer_size,json=consumerSize" json:"consumer_size,omitempty"`
	TaskMasterAkkaPath *string `protobuf:"bytes,5,req,name=task_master_akka_path,json=taskMasterAkkaPath" json:"task_master_akka_path,omitempty"`
	SerialNum          *int64  `protobuf:"varint,6,opt,name=serial_num,json=serialNum" json:"serial_num,omitempty"`
}

func (x *MasterNotifyWorkerPullRequest) Reset() {
	*x = MasterNotifyWorkerPullRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MasterNotifyWorkerPullRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterNotifyWorkerPullRequest) ProtoMessage() {}

func (x *MasterNotifyWorkerPullRequest) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterNotifyWorkerPullRequest.ProtoReflect.Descriptor instead.
func (*MasterNotifyWorkerPullRequest) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{47}
}

func (x *MasterNotifyWorkerPullRequest) GetJobInstanceId() int64 {
	if x != nil && x.JobInstanceId != nil {
		return *x.JobInstanceId
	}
	return 0
}

func (x *MasterNotifyWorkerPullRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *MasterNotifyWorkerPullRequest) GetQueueSize() int32 {
	if x != nil && x.QueueSize != nil {
		return *x.QueueSize
	}
	return 0
}

func (x *MasterNotifyWorkerPullRequest) GetConsumerSize() int32 {
	if x != nil && x.ConsumerSize != nil {
		return *x.ConsumerSize
	}
	return 0
}

func (x *MasterNotifyWorkerPullRequest) GetTaskMasterAkkaPath() string {
	if x != nil && x.TaskMasterAkkaPath != nil {
		return *x.TaskMasterAkkaPath
	}
	return ""
}

func (x *MasterNotifyWorkerPullRequest) GetSerialNum() int64 {
	if x != nil && x.SerialNum != nil {
		return *x.SerialNum
	}
	return 0
}

type MasterNotifyWorkerPullResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success *bool   `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	Message *string `protobuf:"bytes,2,opt,name=message,def=" json:"message,omitempty"`
}

// Default values for MasterNotifyWorkerPullResponse fields.
const (
	Default_MasterNotifyWorkerPullResponse_Message = string("")
)

func (x *MasterNotifyWorkerPullResponse) Reset() {
	*x = MasterNotifyWorkerPullResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MasterNotifyWorkerPullResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterNotifyWorkerPullResponse) ProtoMessage() {}

func (x *MasterNotifyWorkerPullResponse) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterNotifyWorkerPullResponse.ProtoReflect.Descriptor instead.
func (*MasterNotifyWorkerPullResponse) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{48}
}

func (x *MasterNotifyWorkerPullResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *MasterNotifyWorkerPullResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return Default_MasterNotifyWorkerPullResponse_Message
}

// PullThread pull container requests from TaskMaster
type PullTaskFromMasterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobInstanceId *int64  `protobuf:"varint,1,req,name=job_instance_id,json=jobInstanceId" json:"job_instance_id,omitempty"`
	PageSize      *int32  `protobuf:"varint,2,req,name=page_size,json=pageSize" json:"page_size,omitempty"`
	WorkerIdAddr  *string `protobuf:"bytes,3,req,name=worker_id_addr,json=workerIdAddr" json:"worker_id_addr,omitempty"`
	SerialNum     *int64  `protobuf:"varint,4,opt,name=serial_num,json=serialNum" json:"serial_num,omitempty"`
}

func (x *PullTaskFromMasterRequest) Reset() {
	*x = PullTaskFromMasterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullTaskFromMasterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullTaskFromMasterRequest) ProtoMessage() {}

func (x *PullTaskFromMasterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullTaskFromMasterRequest.ProtoReflect.Descriptor instead.
func (*PullTaskFromMasterRequest) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{49}
}

func (x *PullTaskFromMasterRequest) GetJobInstanceId() int64 {
	if x != nil && x.JobInstanceId != nil {
		return *x.JobInstanceId
	}
	return 0
}

func (x *PullTaskFromMasterRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *PullTaskFromMasterRequest) GetWorkerIdAddr() string {
	if x != nil && x.WorkerIdAddr != nil {
		return *x.WorkerIdAddr
	}
	return ""
}

func (x *PullTaskFromMasterRequest) GetSerialNum() int64 {
	if x != nil && x.SerialNum != nil {
		return *x.SerialNum
	}
	return 0
}

type PullTaskFromMasterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success *bool                          `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	Message *string                        `protobuf:"bytes,2,opt,name=message,def=" json:"message,omitempty"`
	Request []*MasterStartContainerRequest `protobuf:"bytes,3,rep,name=request" json:"request,omitempty"`
}

// Default values for PullTaskFromMasterResponse fields.
const (
	Default_PullTaskFromMasterResponse_Message = string("")
)

func (x *PullTaskFromMasterResponse) Reset() {
	*x = PullTaskFromMasterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullTaskFromMasterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullTaskFromMasterResponse) ProtoMessage() {}

func (x *PullTaskFromMasterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullTaskFromMasterResponse.ProtoReflect.Descriptor instead.
func (*PullTaskFromMasterResponse) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{50}
}

func (x *PullTaskFromMasterResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *PullTaskFromMasterResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return Default_PullTaskFromMasterResponse_Message
}

func (x *PullTaskFromMasterResponse) GetRequest() []*MasterStartContainerRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type WorkerOfflineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobInstanceId *int64  `protobuf:"varint,1,req,name=job_instance_id,json=jobInstanceId" json:"job_instance_id,omitempty"`
	WorkerIdAddr  *string `protobuf:"bytes,2,req,name=worker_id_addr,json=workerIdAddr" json:"worker_id_addr,omitempty"`
	Shutdown      *bool   `protobuf:"varint,3,req,name=shutdown" json:"shutdown,omitempty"`
}

func (x *WorkerOfflineRequest) Reset() {
	*x = WorkerOfflineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerOfflineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerOfflineRequest) ProtoMessage() {}

func (x *WorkerOfflineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerOfflineRequest.ProtoReflect.Descriptor instead.
func (*WorkerOfflineRequest) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{51}
}

func (x *WorkerOfflineRequest) GetJobInstanceId() int64 {
	if x != nil && x.JobInstanceId != nil {
		return *x.JobInstanceId
	}
	return 0
}

func (x *WorkerOfflineRequest) GetWorkerIdAddr() string {
	if x != nil && x.WorkerIdAddr != nil {
		return *x.WorkerIdAddr
	}
	return ""
}

func (x *WorkerOfflineRequest) GetShutdown() bool {
	if x != nil && x.Shutdown != nil {
		return *x.Shutdown
	}
	return false
}

type WorkerOfflineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success *bool   `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	Message *string `protobuf:"bytes,2,opt,name=message,def=" json:"message,omitempty"`
}

// Default values for WorkerOfflineResponse fields.
const (
	Default_WorkerOfflineResponse_Message = string("")
)

func (x *WorkerOfflineResponse) Reset() {
	*x = WorkerOfflineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerOfflineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerOfflineResponse) ProtoMessage() {}

func (x *WorkerOfflineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerOfflineResponse.ProtoReflect.Descriptor instead.
func (*WorkerOfflineResponse) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{52}
}

func (x *WorkerOfflineResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *WorkerOfflineResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return Default_WorkerOfflineResponse_Message
}

var File_worker_proto protoreflect.FileDescriptor

var file_worker_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf6, 0x01, 0x0a,
	0x16, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0f, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x12, 0x11, 0x0a, 0x09, 0x77, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x12, 0x14, 0x0a,
	0x0c, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x12, 0x17, 0x0a, 0x0f, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x12, 0x0f, 0x0a, 0x07,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x12, 0x14, 0x0a,
	0x0c, 0x61, 0x70, 0x70, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x12, 0x0e, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x12, 0x0d, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x12, 0x0e, 0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x08, 0x12, 0x0f, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x12, 0x10, 0x0a, 0x08, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x05, 0x22, 0x3d, 0x0a, 0x17, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x48,
	0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0f, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x08, 0x12, 0x11, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x3a, 0x00, 0x22, 0xe3, 0x05, 0x0a, 0x1b, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x03, 0x12, 0x17, 0x0a, 0x0f, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x12, 0x0f, 0x0a,
	0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x12, 0x15,
	0x0a, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x02, 0x28, 0x03, 0x12, 0x11, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x02, 0x28, 0x03, 0x12, 0x10, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0f, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0c, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x08, 0x20, 0x02, 0x28, 0x09, 0x12, 0x12, 0x0a, 0x0a, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x12, 0x21, 0x0a,
	0x19, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x61, 0x6b, 0x6b, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x02, 0x28, 0x09,
	0x12, 0x11, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0c, 0x12, 0x14, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x02, 0x28, 0x09, 0x12, 0x1b, 0x0a, 0x13, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x12, 0x23, 0x0a, 0x0c, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x55,
	0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x13, 0x0a, 0x0b, 0x6d,
	0x61, 0x78, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x0f, 0x0a, 0x07, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x05, 0x12, 0x18, 0x0a, 0x10, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x74,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x12, 0x1d, 0x0a, 0x15, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x12, 0x17, 0x0a, 0x08, 0x66, 0x61,
	0x69, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61,
	0x6c, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x0e, 0x77, 0x66, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x12, 0x12, 0x0a, 0x0a, 0x73,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x12,
	0x14, 0x0a, 0x0c, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x09, 0x12, 0x10, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x12, 0x14, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x05, 0x12, 0x11, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x17, 0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0e, 0x0a, 0x06, 0x78, 0x61, 0x74,
	0x74, 0x72, 0x73, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x12, 0x11, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x12, 0x14, 0x0a, 0x0c,
	0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x1f, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x20,
	0x20, 0x01, 0x28, 0x09, 0x12, 0x14, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x21, 0x20, 0x01, 0x28, 0x03, 0x22, 0x42, 0x0a, 0x1c, 0x4d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0f, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x12, 0x11, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x3a, 0x00, 0x22, 0x92,
	0x01, 0x0a, 0x21, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x0f, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x12, 0x30, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x12,
	0x12, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x22, 0x76, 0x0a, 0x22, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0f, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x12, 0x11, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x3a, 0x00, 0x12, 0x16, 0x0a,
	0x0e, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x03, 0x12, 0x14, 0x0a, 0x0c, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x22, 0x99, 0x01, 0x0a, 0x1a,
	0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4b, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x06, 0x6a, 0x6f,
	0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x12, 0x17, 0x0a, 0x0f, 0x6a, 0x6f,
	0x62, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x03, 0x12, 0x0f, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x12, 0x0c, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x12, 0x1d, 0x0a, 0x15, 0x6d, 0x61, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75,
	0x70, 0x74, 0x49, 0x66, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x02, 0x28,
	0x08, 0x12, 0x14, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x22, 0x41, 0x0a, 0x1b, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x4b, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0f, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x12, 0x11, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x3a, 0x00, 0x22, 0xae, 0x01, 0x0a, 0x21, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x0f, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x12, 0x0e, 0x0a, 0x06, 0x6a, 0x6f, 0x62,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x12, 0x16, 0x0a, 0x0e, 0x77, 0x6f, 0x72,
	0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x12, 0x13, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x12, 0x1f, 0x0a, 0x17, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x5f, 0x75, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x72, 0x65, 0x74, 0x72,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x12, 0x12, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x22, 0x5d, 0x0a, 0x22, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0f, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x08, 0x12, 0x11, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x3a, 0x00, 0x12, 0x13, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x22, 0x4f, 0x0a, 0x1d, 0x4d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x41,
	0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x0f, 0x6a,
	0x6f, 0x62, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x03, 0x12, 0x15, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x22, 0x5a, 0x0a, 0x1e, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0f, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x12, 0x11,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x3a,
	0x00, 0x12, 0x14, 0x0a, 0x0c, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x5f, 0x6a, 0x73, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x22, 0xda, 0x01, 0x0a, 0x24, 0x57, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03,
	0x12, 0x17, 0x0a, 0x0f, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x12, 0x0e, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x12, 0x10, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x12, 0x13, 0x0a, 0x0b, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x12, 0x1f, 0x0a, 0x17, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x75, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x12, 0x10, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x12, 0x0f, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x22, 0x60, 0x0a, 0x25, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0f, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x12, 0x11,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x3a,
	0x00, 0x12, 0x13, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x22, 0x7a, 0x0a, 0x26, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03,
	0x12, 0x17, 0x0a, 0x0f, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x12, 0x10, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x12, 0x15, 0x0a, 0x0d, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x22, 0x4d, 0x0a, 0x27, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0f, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x12, 0x11,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x3a,
	0x00, 0x22, 0x75, 0x0a, 0x22, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x0f, 0x6a, 0x6f, 0x62, 0x5f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03,
	0x12, 0x0e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05,
	0x12, 0x13, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x12, 0x11, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x22, 0x5d, 0x0a, 0x23, 0x57, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0f, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08,
	0x12, 0x11, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x3a, 0x00, 0x12, 0x12, 0x0a, 0x0a, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x22, 0x76, 0x0a, 0x14, 0x57, 0x6f, 0x72, 0x6b, 0x65,
	0x72, 0x4d, 0x61, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x12,
	0x17, 0x0a, 0x0f, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x12, 0x0f, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x12, 0x11, 0x0a, 0x09, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x12, 0x11, 0x0a, 0x09,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0c, 0x22,
	0x4d, 0x0a, 0x15, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0f, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x12, 0x11, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x3a, 0x00, 0x12, 0x10, 0x0a, 0x08,
	0x6f, 0x76, 0x65, 0x72, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x22, 0x32,
	0x0a, 0x17, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x0f, 0x6a, 0x6f, 0x62,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x03, 0x22, 0x4d, 0x0a, 0x18, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x43, 0x6c, 0x65, 0x61,
	0x72, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0f,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x12,
	0x11, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x3a, 0x00, 0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x22, 0xa1, 0x01, 0x0a, 0x17, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x12, 0x17, 0x0a,
	0x0f, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x12, 0x0f, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x12, 0x11, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x12, 0x11, 0x0a, 0x09, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x05, 0x20, 0x02, 0x28, 0x0c, 0x12, 0x13, 0x0a,
	0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x12, 0x11, 0x0a, 0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x6d, 0x61, 0x70, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x22, 0x53, 0x0a, 0x18, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0f, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x08, 0x12, 0x11, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x3a, 0x00, 0x12, 0x13, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x22, 0x9d, 0x01, 0x0a, 0x1d, 0x57,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x0f,
	0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x03, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x13, 0x0a,
	0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x12, 0x11, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x12, 0x13, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x22, 0x59, 0x0a, 0x1e, 0x57, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0f, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x12, 0x11, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x3a, 0x00,
	0x12, 0x13, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x22, 0x9b, 0x01, 0x0a, 0x1d, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x11, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0e, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x16, 0x0a, 0x0e, 0x77, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x12, 0x11, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x12, 0x13, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x12, 0x17, 0x0a, 0x0f, 0x6a, 0x6f,
	0x62, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x02, 0x28, 0x03, 0x22, 0x59, 0x0a, 0x1e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0f, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x12, 0x11, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x3a, 0x00, 0x12, 0x13, 0x0a, 0x0b, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x22, 0xaf,
	0x01, 0x0a, 0x23, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x0f, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x12,
	0x27, 0x0a, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x54, 0x61, 0x73,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x65, 0x73, 0x12, 0x13, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x12, 0x1f, 0x0a,
	0x17, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x75, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x12, 0x10,
	0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x22, 0x73, 0x0a, 0x24, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0f, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x12, 0x11, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x3a, 0x00, 0x12, 0x13, 0x0a, 0x0b,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x12, 0x12, 0x0a, 0x0a, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x22, 0x83, 0x01, 0x0a, 0x10, 0x42, 0x61, 0x74, 0x63, 0x68, 0x54,
	0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x13, 0x0a, 0x0b, 0x77, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x12,
	0x11, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x12, 0x10, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x03, 0x12, 0x25, 0x0a, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5d, 0x0a, 0x21, 0x57,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x0f, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x12, 0x0f, 0x0a, 0x07, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x12, 0x0e, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x22, 0x48, 0x0a, 0x22, 0x57, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0f, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x08, 0x12, 0x11, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x3a, 0x00, 0x22, 0x46, 0x0a, 0x1f, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x11, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x10, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x02, 0x22, 0x46, 0x0a, 0x20,
	0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0f, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x08, 0x12, 0x11, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x3a, 0x00, 0x22, 0x44, 0x0a, 0x0b, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x0f, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x03, 0x12, 0x11, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x12, 0x11, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0c, 0x22, 0x44, 0x0a, 0x16, 0x57, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x50, 0x75, 0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x0f, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x12, 0x11, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05,
	0x22, 0x61, 0x0a, 0x17, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x50, 0x75, 0x6c, 0x6c, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0f, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x12, 0x11, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x3a, 0x00, 0x12,
	0x22, 0x0a, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x3e, 0x0a, 0x23, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x0f, 0x6a, 0x6f,
	0x62, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x03, 0x22, 0x5a, 0x0a, 0x24, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0f, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x12, 0x11, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x3a, 0x00, 0x12,
	0x0e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x22,
	0xa4, 0x02, 0x0a, 0x20, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x03, 0x12, 0x17, 0x0a, 0x0f, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x12, 0x0f, 0x0a,
	0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x12, 0x0e,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x12, 0x13,
	0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x05, 0x20,
	0x02, 0x28, 0x09, 0x12, 0x11, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x12, 0x11, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x12, 0x21, 0x0a, 0x19, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x50, 0x61, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x12, 0x11, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x12, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x12, 0x10, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0f, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x22, 0x47, 0x0a, 0x21, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0f, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x12, 0x11, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x3a, 0x00, 0x22,
	0x9f, 0x02, 0x0a, 0x26, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x06, 0x6a, 0x6f,
	0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x12, 0x17, 0x0a, 0x0f, 0x6a, 0x6f,
	0x62, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x03, 0x12, 0x25, 0x0a, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x15, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x6b, 0x6b, 0x61, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x12, 0x13, 0x0a, 0x0b, 0x77, 0x6f, 0x72,
	0x6b, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x05, 0x20, 0x02, 0x28, 0x09, 0x12, 0x11,
	0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x02, 0x28,
	0x09, 0x12, 0x13, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x12, 0x1f, 0x0a, 0x17, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x5f, 0x75, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x72, 0x65, 0x74, 0x72,
	0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x12, 0x12, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x12, 0x14, 0x0a, 0x0c, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x22, 0x77, 0x0a, 0x0e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x0f, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x03, 0x12, 0x0e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x12, 0x11, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x12, 0x10, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0f, 0x0a, 0x07, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x22, 0x62, 0x0a, 0x27, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0f, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x12, 0x11, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x3a, 0x00, 0x12, 0x13, 0x0a, 0x0b, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x22, 0x36,
	0x0a, 0x1b, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x5a, 0x6f, 0x6d, 0x62, 0x69, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x0f, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x22, 0x3e, 0x0a, 0x1c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x5a, 0x6f, 0x6d, 0x62, 0x69, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x16, 0x7a, 0x6f, 0x6d, 0x62, 0x69, 0x65,
	0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x22, 0xa9, 0x01, 0x0a, 0x1d, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x50, 0x75, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x0f, 0x6a, 0x6f, 0x62, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x03, 0x12, 0x11, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x05, 0x12, 0x12, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x12, 0x15, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x12,
	0x1d, 0x0a, 0x15, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x61,
	0x6b, 0x6b, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x02, 0x28, 0x09, 0x12, 0x12,
	0x0a, 0x0a, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x22, 0x44, 0x0a, 0x1e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0f, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x08, 0x12, 0x11, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x3a, 0x00, 0x22, 0x73, 0x0a, 0x19, 0x50, 0x75, 0x6c, 0x6c,
	0x54, 0x61, 0x73, 0x6b, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x0f, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x12, 0x11,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x05, 0x12, 0x16, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x12, 0x12, 0x0a, 0x0a, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x22, 0x6f, 0x0a,
	0x1a, 0x50, 0x75, 0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0f, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x12, 0x11, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x3a, 0x00, 0x12,
	0x2d, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x59,
	0x0a, 0x14, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x0f, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x12,
	0x16, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x12, 0x10, 0x0a, 0x08, 0x73, 0x68, 0x75, 0x74, 0x64,
	0x6f, 0x77, 0x6e, 0x18, 0x03, 0x20, 0x02, 0x28, 0x08, 0x22, 0x3b, 0x0a, 0x15, 0x57, 0x6f, 0x72,
	0x6b, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0f, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x08, 0x12, 0x11, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x3a, 0x00, 0x42, 0x0e, 0x5a, 0x0c, 0x2e, 0x2f, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x72, 0x78,
}

var (
	file_worker_proto_rawDescOnce sync.Once
	file_worker_proto_rawDescData = file_worker_proto_rawDesc
)

func file_worker_proto_rawDescGZIP() []byte {
	file_worker_proto_rawDescOnce.Do(func() {
		file_worker_proto_rawDescData = protoimpl.X.CompressGZIP(file_worker_proto_rawDescData)
	})
	return file_worker_proto_rawDescData
}

var file_worker_proto_msgTypes = make([]protoimpl.MessageInfo, 53)
var file_worker_proto_goTypes = []interface{}{
	(*WorkerHeartBeatRequest)(nil),                  // 0: WorkerHeartBeatRequest
	(*WorkerHeartBeatResponse)(nil),                 // 1: WorkerHeartBeatResponse
	(*MasterStartContainerRequest)(nil),             // 2: MasterStartContainerRequest
	(*MasterStartContainerResponse)(nil),            // 3: MasterStartContainerResponse
	(*MasterBatchStartContainersRequest)(nil),       // 4: MasterBatchStartContainersRequest
	(*MasterBatchStartContainersResponse)(nil),      // 5: MasterBatchStartContainersResponse
	(*MasterKillContainerRequest)(nil),              // 6: MasterKillContainerRequest
	(*MasterKillContainerResponse)(nil),             // 7: MasterKillContainerResponse
	(*MasterDestroyContainerPoolRequest)(nil),       // 8: MasterDestroyContainerPoolRequest
	(*MasterDestroyContainerPoolResponse)(nil),      // 9: MasterDestroyContainerPoolResponse
	(*MasterCheckWorkerAliveRequest)(nil),           // 10: MasterCheckWorkerAliveRequest
	(*MasterCheckWorkerAliveResponse)(nil),          // 11: MasterCheckWorkerAliveResponse
	(*WorkerReportJobInstanceStatusRequest)(nil),    // 12: WorkerReportJobInstanceStatusRequest
	(*WorkerReportJobInstanceStatusResponse)(nil),   // 13: WorkerReportJobInstanceStatusResponse
	(*WorkerReportJobInstanceProgressRequest)(nil),  // 14: WorkerReportJobInstanceProgressRequest
	(*WorkerReportJobInstanceProgressResponse)(nil), // 15: WorkerReportJobInstanceProgressResponse
	(*WorkerBatchUpdateTaskStatusRequest)(nil),      // 16: WorkerBatchUpdateTaskStatusRequest
	(*WorkerBatchUpdateTaskStatusResponse)(nil),     // 17: WorkerBatchUpdateTaskStatusResponse
	(*WorkerMapTaskRequest)(nil),                    // 18: WorkerMapTaskRequest
	(*WorkerMapTaskResponse)(nil),                   // 19: WorkerMapTaskResponse
	(*WorkerClearTasksRequest)(nil),                 // 20: WorkerClearTasksRequest
	(*WorkerClearTasksResponse)(nil),                // 21: WorkerClearTasksResponse
	(*WorkerCreateTaskRequest)(nil),                 // 22: WorkerCreateTaskRequest
	(*WorkerCreateTaskResponse)(nil),                // 23: WorkerCreateTaskResponse
	(*WorkerBatchCreateTasksRequest)(nil),           // 24: WorkerBatchCreateTasksRequest
	(*WorkerBatchCreateTasksResponse)(nil),          // 25: WorkerBatchCreateTasksResponse
	(*WorkerReportTaskStatusRequest)(nil),           // 26: WorkerReportTaskStatusRequest
	(*WorkerReportTaskStatusResponse)(nil),          // 27: WorkerReportTaskStatusResponse
	(*WorkerBatchReportTaskStatuesRequest)(nil),     // 28: WorkerBatchReportTaskStatuesRequest
	(*WorkerBatchReportTaskStatuesResponse)(nil),    // 29: WorkerBatchReportTaskStatuesResponse
	(*BatchTaskStatues)(nil),                        // 30: BatchTaskStatues
	(*WorkerReportTaskListStatusRequest)(nil),       // 31: WorkerReportTaskListStatusRequest
	(*WorkerReportTaskListStatusResponse)(nil),      // 32: WorkerReportTaskListStatusResponse
	(*WorkerReportTaskProgressRequest)(nil),         // 33: WorkerReportTaskProgressRequest
	(*WorkerReportTaskProgressResponse)(nil),        // 34: WorkerReportTaskProgressResponse
	(*TaskMessage)(nil),                             // 35: TaskMessage
	(*WorkerPullTasksRequest)(nil),                  // 36: WorkerPullTasksRequest
	(*WorkerPullTasksResponse)(nil),                 // 37: WorkerPullTasksResponse
	(*WorkerQueryJobInstanceStatusRequest)(nil),     // 38: WorkerQueryJobInstanceStatusRequest
	(*WorkerQueryJobInstanceStatusResponse)(nil),    // 39: WorkerQueryJobInstanceStatusResponse
	(*ContainerReportTaskStatusRequest)(nil),        // 40: ContainerReportTaskStatusRequest
	(*ContainerReportTaskStatusResponse)(nil),       // 41: ContainerReportTaskStatusResponse
	(*ContainerBatchReportTaskStatuesRequest)(nil),  // 42: ContainerBatchReportTaskStatuesRequest
	(*TaskStatusInfo)(nil),                          // 43: TaskStatusInfo
	(*ContainerBatchReportTaskStatuesResponse)(nil), // 44: ContainerBatchReportTaskStatuesResponse
	(*ContainerCheckZombieRequest)(nil),             // 45: ContainerCheckZombieRequest
	(*ContainerCheckZombieResponse)(nil),            // 46: ContainerCheckZombieResponse
	(*MasterNotifyWorkerPullRequest)(nil),           // 47: MasterNotifyWorkerPullRequest
	(*MasterNotifyWorkerPullResponse)(nil),          // 48: MasterNotifyWorkerPullResponse
	(*PullTaskFromMasterRequest)(nil),               // 49: PullTaskFromMasterRequest
	(*PullTaskFromMasterResponse)(nil),              // 50: PullTaskFromMasterResponse
	(*WorkerOfflineRequest)(nil),                    // 51: WorkerOfflineRequest
	(*WorkerOfflineResponse)(nil),                   // 52: WorkerOfflineResponse
	(*UpstreamData)(nil),                            // 53: UpstreamData
}
var file_worker_proto_depIdxs = []int32{
	53, // 0: MasterStartContainerRequest.upstreamData:type_name -> UpstreamData
	2,  // 1: MasterBatchStartContainersRequest.start_reqs:type_name -> MasterStartContainerRequest
	22, // 2: WorkerBatchCreateTasksRequest.task:type_name -> WorkerCreateTaskRequest
	30, // 3: WorkerBatchReportTaskStatuesRequest.task_statues:type_name -> BatchTaskStatues
	43, // 4: BatchTaskStatues.task_statues:type_name -> TaskStatusInfo
	35, // 5: WorkerPullTasksResponse.task_message:type_name -> TaskMessage
	43, // 6: ContainerBatchReportTaskStatuesRequest.task_statues:type_name -> TaskStatusInfo
	2,  // 7: PullTaskFromMasterResponse.request:type_name -> MasterStartContainerRequest
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_worker_proto_init() }
func file_worker_proto_init() {
	if File_worker_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_worker_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerHeartBeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerHeartBeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MasterStartContainerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MasterStartContainerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MasterBatchStartContainersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MasterBatchStartContainersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MasterKillContainerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MasterKillContainerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MasterDestroyContainerPoolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MasterDestroyContainerPoolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MasterCheckWorkerAliveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MasterCheckWorkerAliveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerReportJobInstanceStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerReportJobInstanceStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerReportJobInstanceProgressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerReportJobInstanceProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerBatchUpdateTaskStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerBatchUpdateTaskStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerMapTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerMapTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerClearTasksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerClearTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerCreateTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerCreateTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerBatchCreateTasksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerBatchCreateTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerReportTaskStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerReportTaskStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerBatchReportTaskStatuesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerBatchReportTaskStatuesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchTaskStatues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerReportTaskListStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerReportTaskListStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerReportTaskProgressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerReportTaskProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerPullTasksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerPullTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerQueryJobInstanceStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerQueryJobInstanceStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerReportTaskStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerReportTaskStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerBatchReportTaskStatuesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskStatusInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerBatchReportTaskStatuesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerCheckZombieRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerCheckZombieResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MasterNotifyWorkerPullRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MasterNotifyWorkerPullResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullTaskFromMasterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullTaskFromMasterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerOfflineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerOfflineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_worker_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   53,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_worker_proto_goTypes,
		DependencyIndexes: file_worker_proto_depIdxs,
		MessageInfos:      file_worker_proto_msgTypes,
	}.Build()
	File_worker_proto = out.File
	file_worker_proto_rawDesc = nil
	file_worker_proto_goTypes = nil
	file_worker_proto_depIdxs = nil
}
